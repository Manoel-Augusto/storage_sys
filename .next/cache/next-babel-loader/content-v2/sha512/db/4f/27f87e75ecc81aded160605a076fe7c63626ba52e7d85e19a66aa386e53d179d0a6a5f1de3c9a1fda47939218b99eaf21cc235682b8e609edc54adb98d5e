{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/js/storage_sys/components/common/TableShared.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useRef, useEffect } from 'react';\nimport { useData } from '../../contexts';\nimport TRShared from './TRShared';\nexport default function TableShared() {\n  const {\n    listRecords,\n    getDataShared\n  } = useData();\n\n  if (!listRecords || !listRecords.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning\",\n      role: \"alert\",\n      children: \"Esta pasta est\\xE1 vazia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }, this);\n  }\n\n  const handleDownload = async data => {\n    let {\n      preview_url,\n      path_lower,\n      [\".tag\"]: type,\n      name\n    } = data;\n    let rt = await fetch('/api/download', {\n      method: 'POST',\n      body: JSON.stringify({\n        path: path_lower || preview_url,\n        type,\n        shared: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(r => r.blob());\n    const link = document.createElement('a');\n    const url = window.URL.createObjectURL(rt);\n    link.href = url;\n    link.setAttribute('download', type === 'file' ? name : `${name}.zip`);\n    document.body.appendChild(link);\n    link.click();\n  };\n\n  const mountFolder = async data => {\n    let {\n      shared_folder_id\n    } = data;\n\n    let _await$fetch$then = await fetch('/api/mount-folder', {\n      method: 'POST',\n      body: JSON.stringify({\n        shared_folder_id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()),\n        {\n      error\n    } = _await$fetch$then,\n        rest = _objectWithoutProperties(_await$fetch$then, [\"error\"]);\n\n    if (!error) {\n      getDataShared();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Modificado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: listRecords.map((item, index) => /*#__PURE__*/_jsxDEV(TRShared, {\n              data: item,\n              mountFolder: mountFolder,\n              handleDownload: handleDownload\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/opt/js/storage_sys/components/common/TableShared.js"],"names":["useRef","useEffect","useData","TRShared","TableShared","listRecords","getDataShared","length","handleDownload","data","preview_url","path_lower","type","name","rt","fetch","method","body","JSON","stringify","path","shared","headers","then","r","blob","link","document","createElement","url","window","URL","createObjectURL","href","setAttribute","appendChild","click","mountFolder","shared_folder_id","res","json","error","rest","map","item","index"],"mappings":"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","sourcesContent":["import { useRef, useEffect } from 'react';\nimport { useData } from '../../contexts';\nimport TRShared from './TRShared'\n\nexport default function TableShared(){\n   const {\n      listRecords,\n      getDataShared,\n   } = useData()\n\n   if(!listRecords || !listRecords.length){\n      return(\n         <div className=\"alert alert-warning\" role=\"alert\">\n            Esta pasta est√° vazia\n         </div>\n      )\n   }\n\n   const handleDownload = async(data) => {\n      let {preview_url, path_lower, [\".tag\"]:type, name} = data\n      let rt = await fetch('/api/download', {\n         method:'POST',\n         body:JSON.stringify({path: path_lower || preview_url, type, shared: true}),\n         headers:{'Content-Type': 'application/json'}\n      }).then(r => r.blob())\n      const link = document.createElement('a')\n      const url = window.URL.createObjectURL(rt)\n      link.href = url\n      link.setAttribute('download', type === 'file' ? name : `${name}.zip`)\n      document.body.appendChild(link)\n      link.click()\n   }\n\n   const mountFolder = async (data) => {\n      let { shared_folder_id } = data\n      let {error, ...rest} = await fetch('/api/mount-folder', {\n         method:'POST',\n         body:JSON.stringify({shared_folder_id}),\n         headers:{'Content-Type': 'application/json'}\n      }).then(res => res.json())\n      if(!error){\n         getDataShared()\n      }\n   }\n\n   return(<>\n      <div className=\"row\">\n         <div className=\"col\">\n            <table className=\"table table-hover\">\n               <thead>\n                  <tr>\n                     <th>Nome</th>\n                     <th>Modificado</th>\n                     <th></th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {listRecords.map((item,index) => \n                  <TRShared key={index} data={item} mountFolder={mountFolder} handleDownload={handleDownload}/>\n                  )}\n               </tbody>\n            </table>\n         </div>\n      </div>\n   </>);\n}\n"]},"metadata":{},"sourceType":"module"}