{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/opt/js/storage_sys/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/opt/js/storage_sys/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/js/storage_sys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/opt/js/storage_sys/components/common/TableShared.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport { useData } from '../../contexts';\nimport TRShared from './TRShared';\nexport default function TableShared() {\n  _s();\n\n  var _this = this;\n\n  var _useData = useData(),\n      listRecords = _useData.listRecords,\n      getDataShared = _useData.getDataShared;\n\n  if (!listRecords || !listRecords.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning\",\n      role: \"alert\",\n      children: \"Esta pasta est\\xE1 vazia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }, this);\n  }\n\n  var handleDownload = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var id, path_lower, type, name, rt, link, url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = data.id, path_lower = data.path_lower, type = data[\".tag\"], name = data.name;\n              _context.next = 3;\n              return fetch('/api/download', {\n                method: 'POST',\n                body: JSON.stringify({\n                  path: id || path_lower,\n                  type: type\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (r) {\n                return r.blob();\n              });\n\n            case 3:\n              rt = _context.sent;\n              link = document.createElement('a');\n              url = window.URL.createObjectURL(rt);\n              link.href = url;\n              link.setAttribute('download', type === 'file' ? name : \"\".concat(name, \".zip\"));\n              document.body.appendChild(link);\n              link.click();\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleDownload(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var mountFolder = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n      var shared_folder_id, _yield$fetch$then, error, rest;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              shared_folder_id = data.shared_folder_id;\n              _context2.next = 3;\n              return fetch('/api/mount-folder', {\n                method: 'POST',\n                body: JSON.stringify({\n                  shared_folder_id: shared_folder_id\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 3:\n              _yield$fetch$then = _context2.sent;\n              error = _yield$fetch$then.error;\n              rest = _objectWithoutProperties(_yield$fetch$then, [\"error\"]);\n\n              if (!error) {\n                getDataShared();\n              }\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function mountFolder(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  console.log(listRecords);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Modificado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: listRecords.map(function (item, index) {\n              return /*#__PURE__*/_jsxDEV(TRShared, {\n                data: item,\n                mountFolder: mountFolder,\n                handleDownload: handleDownload\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TableShared, \"9D7SkGwFia/9NaFWlKgjslnRgcg=\", false, function () {\n  return [useData];\n});\n\n_c = TableShared;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableShared\");","map":{"version":3,"sources":["/opt/js/storage_sys/components/common/TableShared.js"],"names":["useRef","useEffect","useData","TRShared","TableShared","listRecords","getDataShared","length","handleDownload","data","id","path_lower","type","name","fetch","method","body","JSON","stringify","path","headers","then","r","blob","rt","link","document","createElement","url","window","URL","createObjectURL","href","setAttribute","appendChild","click","mountFolder","shared_folder_id","res","json","error","rest","console","log","map","item","index"],"mappings":"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","sourcesContent":["import { useRef, useEffect } from 'react';\nimport { useData } from '../../contexts';\nimport TRShared from './TRShared'\n\nexport default function TableShared(){\n   const {\n      listRecords,\n      getDataShared,\n   } = useData()\n\n   if(!listRecords || !listRecords.length){\n      return(\n         <div className=\"alert alert-warning\" role=\"alert\">\n            Esta pasta está vazia\n         </div>\n      )\n   }\n\n   const handleDownload = async(data) => {\n      let {id, path_lower, [\".tag\"]:type, name} = data\n      let rt = await fetch('/api/download', {\n         method:'POST',\n         body:JSON.stringify({path: id || path_lower, type}),\n         headers:{'Content-Type': 'application/json'}\n      }).then(r => r.blob())\n      const link = document.createElement('a')\n      const url = window.URL.createObjectURL(rt)\n      link.href = url\n      link.setAttribute('download', type === 'file' ? name : `${name}.zip`)\n      document.body.appendChild(link)\n      link.click()\n   }\n\n   const mountFolder = async (data) => {\n      let { shared_folder_id } = data\n      let {error, ...rest} = await fetch('/api/mount-folder', {\n         method:'POST',\n         body:JSON.stringify({shared_folder_id}),\n         headers:{'Content-Type': 'application/json'}\n      }).then(res => res.json())\n      if(!error){\n         getDataShared()\n      }\n   }\n\n      console.log(listRecords)\n   return(<>\n      <div className=\"row\">\n         <div className=\"col\">\n            <table className=\"table table-hover\">\n               <thead>\n                  <tr>\n                     <th>Nome</th>\n                     <th>Modificado</th>\n                     <th></th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {listRecords.map((item,index) => \n                  <TRShared key={index} data={item} mountFolder={mountFolder} handleDownload={handleDownload}/>\n                  )}\n               </tbody>\n            </table>\n         </div>\n      </div>\n   </>);\n}\n"]},"metadata":{},"sourceType":"module"}