{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/opt/js/storage_sys/components/common/ButtonsControl.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport ModalCreateFolder from './ModalCreateFolder';\nexport default function ButtonsControl(_ref) {\n  _s();\n\n  var selected = _ref.selected;\n  var refModalCreateFolder = useRef(null);\n  var refFilesInput = useRef(null);\n\n  var _useState = useState(false),\n      uploadDir = _useState[0],\n      setUploadDir = _useState[1];\n\n  useEffect(function () {\n    return function () {\n      return $(refModalCreateFolder.current).modal('hide');\n    };\n  }, []);\n\n  var handleModalCreateFolder = function handleModalCreateFolder() {\n    $(refModalCreateFolder.current).modal('toggle');\n  };\n\n  var handleFilesInput = function handleFilesInput() {\n    var dir = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    refFilesInput.current.click();\n    setUploadDir(dir);\n  };\n\n  var filesUpload = function filesUpload(files) {\n    console.log(\"File: \", files);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: function onClick() {\n        return handleModalCreateFolder();\n      },\n      children: \"Criar Pasta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(ModalCreateFolder, {\n      refModal: refModalCreateFolder,\n      handleModal: handleModalCreateFolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this), !selected && selected !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline ms-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary dropdown-toggle\",\n          \"data-bs-toggle\": \"dropdown\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: function onClick() {\n                return handleFilesInput();\n              },\n              children: \"Enviar Arquivos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: function onClick() {\n                return handleFilesInput(true);\n              },\n              children: \"Enviar Pasta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: refFilesInput,\n        onChange: function onChange(e) {\n          return filesUpload(e.target.files);\n        },\n        webkitdirectory: uploadDir,\n        directory: uploadDir,\n        multiple: true,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline ms-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        children: \"Baixar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary ms-2\",\n        children: \"Excluir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ButtonsControl, \"5D+tzPfBvN06hr+JG8L4tWAS8L4=\");\n\n_c = ButtonsControl;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonsControl\");","map":{"version":3,"sources":["/opt/js/storage_sys/components/common/ButtonsControl.js"],"names":["useState","useEffect","useRef","ModalCreateFolder","ButtonsControl","selected","refModalCreateFolder","refFilesInput","uploadDir","setUploadDir","$","current","modal","handleModalCreateFolder","handleFilesInput","dir","click","filesUpload","files","console","log","e","target"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport ModalCreateFolder from './ModalCreateFolder';\n\nexport default function ButtonsControl({selected}){\n   const refModalCreateFolder = useRef(null);\n   const refFilesInput = useRef(null);\n   const [uploadDir, setUploadDir] = useState(false)\n\n   useEffect(()=>{\n      return () => $(refModalCreateFolder.current).modal('hide')\n   },[])\n\n   const handleModalCreateFolder = () => {\n      $(refModalCreateFolder.current).modal('toggle')\n   }\n\n   const handleFilesInput= (dir=false) => {refFilesInput.current.click(); setUploadDir(dir)}\n\n\n   const filesUpload = (files)=>{\n      console.log(\"File: \", files)\n   }\n\n   return (\n      <div>\n         <button className=\"btn btn-primary\" onClick={() => handleModalCreateFolder()}>Criar Pasta</button>\n         <ModalCreateFolder refModal={refModalCreateFolder} handleModal={handleModalCreateFolder}/>\n         {!selected && selected !== null ?\n            <div className=\"d-inline ms-4\">\n               <div className=\"btn-group\">\n                  <button className=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\">Enviar</button>\n                  <ul className=\"dropdown-menu\">\n                     <li><button className=\"dropdown-item\" onClick={() => handleFilesInput()}>Enviar Arquivos</button></li>\n                     <li><button className=\"dropdown-item\" onClick={() => handleFilesInput(true)}>Enviar Pasta</button></li>\n                  </ul>\n               </div>\n               <input type=\"file\" \n                  ref={refFilesInput}\n                  onChange={(e) => filesUpload(e.target.files)} \n                  webkitdirectory={uploadDir}\n                  directory={uploadDir} \n                  multiple\n                  hidden/> \n            </div>\n            :\n            <div className=\"d-inline ms-4\">\n               <button className=\"btn btn-secondary\">Baixar</button>\n               <button className=\"btn btn-secondary ms-2\">Excluir</button>\n            </div>\n         }\n      </div>\n   );\n};\n"]},"metadata":{},"sourceType":"module"}