{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/js/storage_sys/components/profile/FormProfile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, useRef } from 'react';\nimport { ContextData, useAuth } from '../../contexts';\nexport default function FormProfile() {\n  const {\n    session,\n    setSession\n  } = useAuth();\n  const {\n    0: password,\n    1: setPassword\n  } = useState(''),\n        elPassword = useRef(null);\n  const {\n    0: passwordVerify,\n    1: setPasswordVerify\n  } = useState(''),\n        elPasswordVerify = useRef(null);\n  const {\n    0: sent,\n    1: setSent\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const passCompare = value => {\n    if (value !== password || value !== passwordVerify) {\n      elPasswordVerify.current.className = \"form-control is-invalid\";\n      setError(true);\n      setSent(false);\n    } else {\n      elPasswordVerify.current.className = \"form-control\";\n      setError(false);\n    }\n  };\n\n  const sendData = async e => {\n    e.preventDefault();\n    let {\n      name,\n      dropboxToken,\n      token\n    } = session;\n    let data = {\n      name,\n      dropboxToken\n    };\n\n    if (password.trim()) {\n      data = _objectSpread(_objectSpread({}, data), {}, {\n        password\n      });\n    }\n\n    let rt = await fetch('/api/user', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    });\n    rt = await rt.json();\n    setSent(true);\n    setError(!rt);\n  };\n\n  if (sent) {\n    setTimeout(function () {\n      setSent(false);\n    }, 4000);\n\n    if (!error) {\n      var sentContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success mt-3\",\n        children: \"Usu\\xE1rio atualizado!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this);\n    } else {\n      var sentContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-3\",\n        children: \"Usu\\xE1rio n\\xE3o foi atualizado!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-lg-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: \"Perfil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [sentContent, /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendData,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"form-label\",\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              onChange: e => setSession(_objectSpread(_objectSpread({}, session), {}, {\n                [e.target.name]: e.target.value\n              })),\n              value: session.name || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"form-label\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"email\",\n              id: \"email\",\n              value: session.email || '',\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Usu\\xE1rio j\\xE1 existe.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"form-label\",\n              children: \"Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              ref: elPassword,\n              maxLength: \"100\",\n              onBlur: e => passCompare(e.target.value),\n              onChange: e => setPassword(e.target.value),\n              value: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"passwordVerify\",\n              className: \"form-label\",\n              children: \"Confirmar senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"password\",\n              id: \"passwordVerify\",\n              name: \"passwordVerify\",\n              ref: elPasswordVerify,\n              maxLength: \"100\",\n              onBlur: e => passCompare(e.target.value),\n              onChange: e => setPasswordVerify(e.target.value),\n              value: passwordVerify\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Aten\\xE7\\xE3o Senhas n\\xE3o Coincidem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"dropboxToken\",\n              className: \"form-label\",\n              children: \"Token do Dropbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              id: \"dropboxToken\",\n              name: \"dropboxToken\",\n              onChange: e => setSession(_objectSpread(_objectSpread({}, session), {}, {\n                [e.target.name]: e.target.value\n              })),\n              value: session.dropboxToken || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `btn btn-primary ${error && !sent ? 'disabled' : ''}`,\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/opt/js/storage_sys/components/profile/FormProfile.js"],"names":["useState","useEffect","useRef","ContextData","useAuth","FormProfile","session","setSession","password","setPassword","elPassword","passwordVerify","setPasswordVerify","elPasswordVerify","sent","setSent","error","setError","passCompare","value","current","className","sendData","e","preventDefault","name","dropboxToken","token","data","trim","rt","fetch","method","headers","body","JSON","stringify","json","setTimeout","sentContent","target","email"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { ContextData, useAuth } from '../../contexts';\n\nexport default function FormProfile(){\n   const { session, setSession } = useAuth()\n\n   const [password,setPassword] = useState(''),\n      elPassword = useRef(null)\n   const [passwordVerify,setPasswordVerify] = useState(''),\n      elPasswordVerify = useRef(null)\n   const [sent,setSent] = useState(false)\n   const [error,setError] = useState(false)\n\n   const passCompare = (value) => {\n      if(value !== password || value !== passwordVerify){\n         elPasswordVerify.current.className = \"form-control is-invalid\"\n         setError(true)\n         setSent(false)\n      }else{\n         elPasswordVerify.current.className = \"form-control\"\n         setError(false)\n      }\n   }\n\n   const sendData = async(e)=>{\n      e.preventDefault()\n      let {name, dropboxToken, token} = session\n      let data = {name, dropboxToken}\n      if(password.trim()){\n         data = {...data, password}\n      }\n      let rt = await fetch('/api/user', {\n         method:'PUT',\n         headers:{\n            'Content-Type': 'application/json',\n            'Authorization':`Bearer ${token}`\n         },\n         body:JSON.stringify(data),\n      })\n      rt = await rt.json()\n      setSent(true)\n      setError(!rt)\n   }\n\n   if(sent){\n      setTimeout(function(){ setSent(false) }, 4000);\n      if(!error){\n         var sentContent = (\n            <div className=\"alert alert-success mt-3\">\n               Usuário atualizado!\n            </div>\n         )\n      }else{\n         var sentContent =  (\n            <div className=\"alert alert-danger mt-3\">\n               Usuário não foi atualizado!\n            </div>\n         )\n      }\n   }\n\n   return (\n      <div className=\"col-lg-5\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               Perfil\n            </div>\n            <div className=\"card-body\">\n               {sentContent}\n               <form onSubmit={sendData}>\n                  <div className=\"mb-3\">\n                     <label htmlFor=\"name\" className=\"form-label\">Nome</label>\n                     <input className=\"form-control\"\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        onChange={(e) => setSession({...session, [e.target.name]:e.target.value})}\n                        value={session.name || ''}\n                     />\n                  </div>\n                  <div className=\"mb-3\">\n                     <label htmlFor=\"email\" className=\"form-label\">E-mail</label>\n                     <input className=\"form-control\"\n                        type=\"email\"\n                        id=\"email\"\n                        value={session.email || ''}\n                        readOnly\n                     />\n                     <div className=\"invalid-feedback\">\n                        Usuário já existe.\n                     </div>\n                  </div>\n                  <div className=\"mb-3\">\n                     <label htmlFor=\"password\" className=\"form-label\">Senha</label>\n                     <input className=\"form-control\"\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        ref={elPassword}\n                        maxLength=\"100\"\n                        onBlur={e => passCompare(e.target.value)}\n                        onChange={(e) => setPassword(e.target.value)}\n                        value={password}\n                     />\n                  </div>\n                  <div className=\"mb-3\">\n                     <label htmlFor=\"passwordVerify\" className=\"form-label\">Confirmar senha</label>\n                     <input className=\"form-control\"\n                        type=\"password\"\n                        id=\"passwordVerify\"\n                        name=\"passwordVerify\"\n                        ref={elPasswordVerify}\n                        maxLength=\"100\"\n                        onBlur={e => passCompare(e.target.value)}\n                        onChange={(e) => setPasswordVerify(e.target.value)}\n                        value={passwordVerify}\n                     />\n                     <div className=\"invalid-feedback\">\n                        Atenção Senhas não Coincidem\n                     </div>\n                  </div>\n                  <div className=\"mb-3\">\n                     <label htmlFor=\"dropboxToken\" className=\"form-label\">Token do Dropbox</label>\n                     <input className=\"form-control\"\n                        type=\"text\"\n                        id=\"dropboxToken\"\n                        name=\"dropboxToken\"\n                        onChange={(e) => setSession({...session, [e.target.name]:e.target.value})}\n                        value={session.dropboxToken || ''}\n                     />\n                  </div>\n                  <button type=\"submit\" className={`btn btn-primary ${error && !sent ? 'disabled' : ''}`}>Salvar</button>\n               </form>\n            </div>\n         </div>\n      </div>\n   )\n}\n"]},"metadata":{},"sourceType":"module"}