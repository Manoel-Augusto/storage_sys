{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/opt/js/storage_sys/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/js/storage_sys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/opt/js/storage_sys/components/common/FormLogin.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { useAuth } from '../../contexts';\nexport default function FormLogin() {\n  _s();\n\n  var _useAuth = useAuth(),\n      createSession = _useAuth.createSession;\n\n  var _useState = useState(false),\n      submitOk = _useState[0],\n      setSubmitOk = _useState[1];\n\n  var _useState2 = useState(''),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      password = _useState3[0],\n      setPassword = _useState3[1],\n      elPassword = useRef();\n\n  var checkEmailExist = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var exist;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!e.target.value) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return fetch(\"/api/check-email?email=\".concat(e.target.value)).then(function (res) {\n                return res.json();\n              });\n\n            case 3:\n              exist = _context.sent;\n\n              if (exist) {\n                e.target.className = \"form-control\";\n                setSubmitOk(true);\n              } else {\n                e.target.className = \"form-control is-invalid\";\n                setSubmitOk(false);\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 6:\n              e.target.className = \"form-control\";\n              setSubmitOk(true);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function checkEmailExist(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var sendData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var rt;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              _context2.next = 3;\n              return fetch('/api/auth', {\n                method: 'POST',\n                body: JSON.stringify({\n                  email: email,\n                  password: password\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 3:\n              rt = _context2.sent;\n\n              /*if(rt){\n                 await createSession(rt)\n              }*/\n              console.log(elPassword, rt);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function sendData(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-lg-4 mb-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendData,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"form-label\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"email\",\n              id: \"email\",\n              onBlur: function onBlur(e) {\n                return checkEmailExist(e);\n              },\n              onChange: function onChange(e) {\n                return setEmail(e.target.value);\n              },\n              value: email,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Usu\\xE1rio n\\xE3o existe em nossa base. Cadastre-se.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"form-label\",\n              children: \"Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"password\",\n              id: \"password\",\n              ref: elPassword,\n              onChange: function onChange(e) {\n                return setPassword(e.target.value);\n              },\n              value: password,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Senha inv\\xE1lida.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary \".concat(!submitOk ? 'disabled' : ''),\n            children: \"Acessar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FormLogin, \"mNTCHUCNQR9JT2XKjIPHBeUiDVI=\", false, function () {\n  return [useAuth];\n});\n\n_c = FormLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormLogin\");","map":{"version":3,"sources":["/opt/js/storage_sys/components/common/FormLogin.js"],"names":["useState","useRef","useAuth","FormLogin","createSession","submitOk","setSubmitOk","email","setEmail","password","setPassword","elPassword","checkEmailExist","e","target","value","fetch","then","res","json","exist","className","sendData","preventDefault","method","body","JSON","stringify","headers","rt","console","log"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\nimport { useAuth } from '../../contexts';\n\nexport default function FormLogin(){\n   const { createSession } = useAuth()\n   const [submitOk,setSubmitOk] = useState(false)\n   const [email,setEmail] = useState('')\n   const [password,setPassword] = useState(''), elPassword = useRef()\n\n   const checkEmailExist = async (e) => {\n      if(e.target.value){\n         let exist = await fetch(`/api/check-email?email=${e.target.value}`).then(res => res.json())\n         if(exist){\n            e.target.className = \"form-control\"\n            setSubmitOk(true)\n         }else{\n            e.target.className = \"form-control is-invalid\"\n            setSubmitOk(false)\n         }\n         return\n      }\n      e.target.className = \"form-control\"\n      setSubmitOk(true)\n   }\n\n   const sendData = async(e)=>{\n      e.preventDefault()\n      let rt = await fetch('/api/auth', {\n         method:'POST',\n         body:JSON.stringify({email,password}),\n         headers:{'Content-Type': 'application/json'}\n      }).then(res => res.json())\n      /*if(rt){\n         await createSession(rt)\n      }*/\n      console.log(elPassword, rt)\n   }\n\n   return(\n      <div className=\"col-lg-4 mb-5\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               Login\n            </div>\n            <div className=\"card-body\">\n               <form onSubmit={sendData}>\n                  <div className=\"mb-3\">\n                     <label htmlFor=\"email\" className=\"form-label\">E-mail</label>\n                     <input className=\"form-control\"\n                        type=\"email\"\n                        id=\"email\"\n                        onBlur={(e) => checkEmailExist(e)}\n                        onChange={(e) => setEmail(e.target.value)}\n                        value={email}\n                        required\n                     />\n                     <div className=\"invalid-feedback\">\n                        Usuário não existe em nossa base. Cadastre-se.\n                     </div>\n                  </div>\n                  <div className=\"mb-3\">\n                     <label htmlFor=\"password\" className=\"form-label\">Senha</label>\n                     <input className=\"form-control\"\n                        type=\"password\"\n                        id=\"password\"\n                        ref={elPassword}\n                        onChange={(e) => setPassword(e.target.value)}\n                        value={password}\n                        required\n                     />\n                     <div className=\"invalid-feedback\">\n                        Senha inválida.\n                     </div>\n                  </div>\n                  <button type=\"submit\" className={`btn btn-primary ${!submitOk ? 'disabled' : ''}`}>Acessar</button>\n               </form>\n            </div>\n         </div>\n      </div>\n   );\n}\n"]},"metadata":{},"sourceType":"module"}