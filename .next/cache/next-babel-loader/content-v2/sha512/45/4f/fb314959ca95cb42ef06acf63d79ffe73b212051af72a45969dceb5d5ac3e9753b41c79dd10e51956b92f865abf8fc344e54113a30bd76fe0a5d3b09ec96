{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/opt/js/storage_sys/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/js/storage_sys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/opt/js/storage_sys/contexts/models/auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useRouter } from 'next/router';\nvar ContextAuth = /*#__PURE__*/React.createContext();\n\nfunction ProviderAuth(props) {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState(null),\n      session = _useState[0],\n      setSession = _useState[1];\n\n  var _useState2 = useState(false),\n      authenticated = _useState2[0],\n      setAuthenticated = _useState2[1];\n\n  var handleSession = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var ss, _authenticated;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              ss = JSON.parse(localStorage.getItem(\"ss\"));\n\n              if (!ss) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 4;\n              return fetch(\"/api/check-auth?token=\".concat(ss.token));\n\n            case 4:\n              _context.next = 6;\n              return _context.sent.json();\n\n            case 6:\n              _authenticated = _context.sent;\n              setSession(ss);\n              setAuthenticated(_authenticated);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), []);\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            handleSession();\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [handleSession]);\n\n  var createSession = function createSession(user) {\n    localStorage.setItem(\"ss\", JSON.stringify(user));\n    setSession(user);\n    setAuthenticated(true);\n  };\n\n  var removeSession = function removeSession() {\n    localStorage.removeItem(\"ss\");\n    setSession(null);\n    setAuthenticated(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContextAuth.Provider, {\n    value: {\n      session: session,\n      setSession: setSession,\n      authenticated: authenticated,\n      createSession: createSession,\n      removeSession: removeSession\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ProviderAuth, \"RVhdfI5vWsbRQBNFQCwT2V9TKNg=\", false, function () {\n  return [useRouter];\n});\n\n_c = ProviderAuth;\nexport default ProviderAuth;\nexport { ContextAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderAuth\");","map":{"version":3,"sources":["/opt/js/storage_sys/contexts/models/auth.js"],"names":["React","useState","useEffect","useCallback","useRouter","ContextAuth","createContext","ProviderAuth","props","router","session","setSession","authenticated","setAuthenticated","handleSession","e","ss","JSON","parse","localStorage","getItem","fetch","token","json","createSession","user","setItem","stringify","removeSession","removeItem","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AACzB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AADyB,kBAEIH,QAAQ,CAAC,IAAD,CAFZ;AAAA,MAElBS,OAFkB;AAAA,MAEVC,UAFU;;AAAA,mBAGgBV,QAAQ,CAAC,KAAD,CAHxB;AAAA,MAGlBW,aAHkB;AAAA,MAGJC,gBAHI;;AAKzB,MAAMC,aAAa,GAAGX,WAAW;AAAA,wEAAC,iBAAMY,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC3BC,cAAAA,EAD2B,GACtBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAX,CADsB;;AAAA,mBAE5BJ,EAF4B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGKK,KAAK,iCAA0BL,EAAE,CAACM,KAA7B,EAHV;;AAAA;AAAA;AAAA,mCAGiDC,IAHjD;;AAAA;AAGxBX,cAAAA,cAHwB;AAI5BD,cAAAA,UAAU,CAACK,EAAD,CAAV;AACAH,cAAAA,gBAAgB,CAACD,cAAD,CAAhB;;AAL4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAO9B,EAP8B,CAAjC;AASAV,EAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AACPY,YAAAA,aAAa;;AADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAEP,CAACA,aAAD,CAFO,CAAT;;AAIA,MAAMU,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAQ;AAC3BN,IAAAA,YAAY,CAACO,OAAb,CAAqB,IAArB,EAA2BT,IAAI,CAACU,SAAL,CAAeF,IAAf,CAA3B;AACAd,IAAAA,UAAU,CAACc,IAAD,CAAV;AACAZ,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACF,GAJD;;AAMA,MAAMe,aAAa,GAAG,SAAhBA,aAAgB,GAAI;AACvBT,IAAAA,YAAY,CAACU,UAAb,CAAwB,IAAxB;AACAlB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACF,GAJD;;AAMA,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAC1BH,MAAAA,OAAO,EAAPA,OAD0B;AAE1BC,MAAAA,UAAU,EAAVA,UAF0B;AAG1BC,MAAAA,aAAa,EAAbA,aAH0B;AAI1BY,MAAAA,aAAa,EAAbA,aAJ0B;AAK1BI,MAAAA,aAAa,EAAbA;AAL0B,KAA7B;AAAA,cAOIpB,KAAK,CAACsB;AAPV;AAAA;AAAA;AAAA;AAAA,UADH;AAWF;;GAzCQvB,Y;UACSH,S;;;KADTG,Y;AA2CT,eAAeA,YAAf;AACA,SAASF,WAAT","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useRouter } from 'next/router'\n\nconst ContextAuth = React.createContext()\n\nfunction ProviderAuth(props){\n   const router = useRouter()\n   const [session,setSession] = useState(null)\n   const [authenticated,setAuthenticated] = useState(false)\n\n   const handleSession = useCallback(async(e) => {\n      let ss = JSON.parse(localStorage.getItem(\"ss\"))\n      if(ss){\n         let authenticated = await (await fetch(`/api/check-auth?token=${ss.token}`)).json()\n         setSession(ss)\n         setAuthenticated(authenticated)\n      }\n   }, []);\n\n   useEffect(async()=>{\n      handleSession()\n   },[handleSession])\n\n   const createSession = (user)=>{\n      localStorage.setItem(\"ss\", JSON.stringify(user))\n      setSession(user)\n      setAuthenticated(true)\n   }\n\n   const removeSession = ()=>{\n      localStorage.removeItem(\"ss\")\n      setSession(null)\n      setAuthenticated(false)\n   }\n\n   return(\n      <ContextAuth.Provider value={{\n         session,\n         setSession,\n         authenticated,\n         createSession,\n         removeSession\n      }}>\n         {props.children}\n      </ContextAuth.Provider>\n   )\n}\n\nexport default ProviderAuth\nexport { ContextAuth }\n"]},"metadata":{},"sourceType":"module"}