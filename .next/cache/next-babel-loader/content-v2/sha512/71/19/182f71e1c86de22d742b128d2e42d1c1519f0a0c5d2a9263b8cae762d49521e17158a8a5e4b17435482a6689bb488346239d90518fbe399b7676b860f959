{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/js/storage_sys/components/common/ModalShare.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { useData } from '../../contexts';\nexport default function Modalhare({\n  refModal,\n  handleModal\n}) {\n  const {\n    dataShare\n  } = useData();\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n  const {\n    0: link,\n    1: setLink\n  } = useState('');\n  useEffect(() => {\n    return () => $(refModal.current).modal('hide');\n  }, []);\n  useEffect(() => {\n    if (dataShare) {\n      let {\n        shared_link\n      } = dataShare;\n      console.log(shared_link);\n      setLink(`${location.origin}/share/${encodeURIComponent(shared_link)}`);\n    }\n  }, [dataShare]);\n  useEffect(async () => {\n    if (dataShare) {\n      let {\n        id,\n        name,\n        [\".tag\"]: type\n      } = dataShare;\n\n      let _await$fetch$then = await fetch('/api/share-link', {\n        method: 'POST',\n        body: JSON.stringify({\n          id,\n          name,\n          type,\n          active\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()),\n          {\n        error\n      } = _await$fetch$then,\n          rest = _objectWithoutProperties(_await$fetch$then, [\"error\"]);\n\n      if (!error) {\n        setLink(`${location.origin}/share/${encodeURIComponent(rest.link)}`);\n      }\n    }\n  }, [active]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal fade\",\n    ref: refModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-dialog modal-md modal-dialog-centered\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"modal-title\",\n            children: \"Criar link de compartinhamento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-close\",\n            onClick: () => handleModal()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check form-switch\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-check-input\",\n                type: \"checkbox\",\n                id: \"switchActive\",\n                onChange: e => setActive(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"switchActive\",\n                children: \"Ativar compartilhamento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 22\n            }, this), active && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"my-4\",\n              children: [\"Link: \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: link,\n                target: \"_blank\",\n                children: link.replace(/(.{35})..+/, \"$1...\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/opt/js/storage_sys/components/common/ModalShare.js"],"names":["useState","useEffect","useData","Modalhare","refModal","handleModal","dataShare","active","setActive","link","setLink","$","current","modal","shared_link","console","log","location","origin","encodeURIComponent","id","name","type","fetch","method","body","JSON","stringify","headers","then","res","json","error","rest","e","target","checked","replace"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useData } from '../../contexts';\n\nexport default function Modalhare({refModal, handleModal}){\n   const { dataShare } = useData()\n   const [active,setActive] = useState(false)\n   const [link,setLink] = useState('')\n\n   useEffect(()=>{\n      return () => $(refModal.current).modal('hide')\n   },[])\n\n   useEffect(()=>{\n      if(dataShare){\n         let { shared_link } = dataShare\n         console.log(shared_link)\n         setLink(`${location.origin}/share/${encodeURIComponent(shared_link)}`)\n      }\n   },[dataShare])\n\n\n   useEffect(async()=>{\n      if(dataShare){\n         let {id, name, [\".tag\"]:type} = dataShare\n         let {error, ...rest} = await fetch('/api/share-link', {\n            method:'POST',\n            body:JSON.stringify({id, name, type, active}),\n            headers:{'Content-Type': 'application/json'}\n         }).then(res => res.json())\n         if(!error){\n            setLink(`${location.origin}/share/${encodeURIComponent(rest.link)}`)\n         }\n      }\n   },[active])\n\n   return (\n      <div className=\"modal fade\" ref={refModal}>\n         <div className=\"modal-dialog modal-md modal-dialog-centered\">\n            <div className=\"modal-content\">\n               <div className=\"modal-header\">\n                  <h5 className=\"modal-title\">Criar link de compartinhamento</h5>\n                  <button className=\"btn-close\" onClick={() => handleModal()}></button>\n               </div>\n               <div className=\"modal-body\">\n                  <div className=\"mb-3\">\n                     <div className=\"form-check form-switch\">\n                        <input className=\"form-check-input\" \n                           type=\"checkbox\" \n                           id=\"switchActive\"\n                           onChange={(e) => setActive(e.target.checked)}/>\n                        <label className=\"form-check-label\" htmlFor=\"switchActive\">Ativar compartilhamento</label>\n                     </div>\n                     {active &&\n                     <div className=\"my-4\">\n                        Link: <a href={link} target=\"_blank\">{link.replace(/(.{35})..+/, \"$1...\")}</a>\n                     </div>\n                     }\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   )\n}\n"]},"metadata":{},"sourceType":"module"}