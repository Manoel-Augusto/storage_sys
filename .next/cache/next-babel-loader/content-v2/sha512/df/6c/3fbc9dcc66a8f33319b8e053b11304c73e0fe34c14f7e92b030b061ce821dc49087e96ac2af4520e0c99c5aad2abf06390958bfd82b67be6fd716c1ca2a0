{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/js/storage_sys/contexts/models/main.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nconst ContextMain = /*#__PURE__*/React.createContext();\n\nfunction ProviderMain(props) {\n  const {\n    0: isMobile,\n    1: setIsMobile\n  } = useState(false);\n\n  const handleMobile = size => setIsMobile(size <= 990 || false);\n\n  const handleWidthResize = useCallback(event => {\n    handleMobile(innerWidth);\n    addEventListener('resize', () => {\n      handleMobile(innerWidth);\n    });\n  }, []);\n  useEffect(() => {\n    handleWidthResize();\n    return () => {\n      removeEventListener('resize', () => {\n        handleMobile(innerWidth);\n      });\n    };\n  }, [handleWidthResize]);\n  return /*#__PURE__*/_jsxDEV(ContextMain.Provider, {\n    value: {\n      isMobile\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n\nexport default ProviderMain;\nexport { ContextMain };","map":{"version":3,"sources":["/opt/js/storage_sys/contexts/models/main.js"],"names":["React","useState","useEffect","useCallback","ContextMain","createContext","ProviderMain","props","isMobile","setIsMobile","handleMobile","size","handleWidthResize","event","innerWidth","addEventListener","removeEventListener","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAuD,OAAvD;AAEA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AACzB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMS,YAAY,GAAIC,IAAD,IAASF,WAAW,CAACE,IAAI,IAAI,GAAR,IAAe,KAAhB,CAAzC;;AAEA,QAAMC,iBAAiB,GAAGT,WAAW,CAACU,KAAK,IAAI;AAC5CH,IAAAA,YAAY,CAACI,UAAD,CAAZ;AACAC,IAAAA,gBAAgB,CAAC,QAAD,EAAW,MAAI;AAAEL,MAAAA,YAAY,CAACI,UAAD,CAAZ;AAA0B,KAA3C,CAAhB;AACF,GAHoC,EAGlC,EAHkC,CAArC;AAKAZ,EAAAA,SAAS,CAAC,MAAI;AACXU,IAAAA,iBAAiB;AACjB,WAAO,MAAM;AAACI,MAAAA,mBAAmB,CAAC,QAAD,EAAW,MAAI;AAAEN,QAAAA,YAAY,CAACI,UAAD,CAAZ;AAA0B,OAA3C,CAAnB;AAAgE,KAA9E;AACF,GAHQ,EAGP,CAACF,iBAAD,CAHO,CAAT;AAKA,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAC1BJ,MAAAA;AAD0B,KAA7B;AAAA,cAGID,KAAK,CAACU;AAHV;AAAA;AAAA;AAAA;AAAA,UADH;AAOF;;AACD,eAAeX,YAAf;AACA,SAASF,WAAT","sourcesContent":["import React, { useState, useEffect, useCallback} from 'react';\n\nconst ContextMain = React.createContext()\n\nfunction ProviderMain(props){\n   const [isMobile, setIsMobile] = useState(false)\n\n   const handleMobile = (size)=> setIsMobile(size <= 990 || false)\n\n   const handleWidthResize = useCallback(event => {\n      handleMobile(innerWidth)\n      addEventListener('resize', ()=>{ handleMobile(innerWidth) })\n   }, []);\n\n   useEffect(()=>{\n      handleWidthResize()\n      return () => {removeEventListener('resize', ()=>{ handleMobile(innerWidth) })}\n   },[handleWidthResize])\n\n   return(\n      <ContextMain.Provider value={{\n         isMobile,\n      }}>\n         {props.children}\n      </ContextMain.Provider>\n   )\n}\nexport default ProviderMain\nexport { ContextMain }\n"]},"metadata":{},"sourceType":"module"}