{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/js/storage_sys/components/common/FormSignup.js\";\nimport { useState, useRef } from 'react';\nexport default function FormSignup() {\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState(''),\n        elPassword = useRef(null);\n  const {\n    0: passwordVerify,\n    1: setPasswordVerify\n  } = useState(''),\n        elPasswordVerify = useRef(null);\n  const {\n    0: dropboxToken,\n    1: setDropboxToken\n  } = useState('');\n  const {\n    0: sent,\n    1: setSent\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const checkEmailExist = async e => {\n    if (e.target.value) {\n      let exist = await fetch(`/api/check-email?email=${e.target.value}`);\n      exist = await exist.json();\n\n      if (!exist) {\n        e.target.className = \"form-control\";\n        setError(false);\n      } else {\n        e.target.className = \"form-control is-invalid\";\n        e.target.focus();\n        setError(true);\n      }\n\n      return;\n    }\n\n    e.target.className = \"form-control\";\n    setError(false);\n  };\n\n  const passCompare = value => {\n    if (value !== password || value !== passwordVerify) {\n      elPasswordVerify.current.className = \"form-control is-invalid\";\n      setError(true);\n    } else {\n      elPasswordVerify.current.className = \"form-control\";\n      setError(false);\n    }\n  };\n\n  const sendData = async e => {\n    e.preventDefault();\n    let rt = await fetch('/api/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        dropboxToken\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    rt = await rt.json();\n    setSent(true);\n    setError(rt);\n  };\n\n  if (sent) {\n    if (error) {\n      var sentContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success text-center\",\n        children: \"Usu\\xE1rio cadastrado!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this);\n    } else {\n      var sentContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger text-center\",\n        children: \"Usu\\xE1rio n\\xE3o foi cadastrado!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-lg-4 ms-lg-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: \"Cadastre-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: sentContent ? sentContent : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendData,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"form-label\",\n              children: \"Nome*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              id: \"name\",\n              onChange: e => setName(e.target.value),\n              value: name,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"form-label\",\n              children: \"E-mail*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"email\",\n              id: \"email\",\n              onBlur: e => checkEmailExist(e),\n              onChange: e => setEmail(e.target.value),\n              value: email,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Usu\\xE1rio j\\xE1 existe.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"form-label\",\n              children: \"Senha*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              ref: elPassword,\n              maxLength: \"100\",\n              onBlur: e => passCompare(e.target.value),\n              onChange: e => setPassword(e.target.value),\n              value: password,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"passwordVerify\",\n              className: \"form-label\",\n              children: \"Confirmar senha*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"password\",\n              id: \"passwordVerify\",\n              name: \"passwordVerify\",\n              ref: elPasswordVerify,\n              maxLength: \"100\",\n              onBlur: e => passCompare(e.target.value),\n              onChange: e => setPasswordVerify(e.target.value),\n              value: passwordVerify,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Aten\\xE7\\xE3o Senhas n\\xE3o Coincidem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"dropboxToken\",\n              className: \"form-label\",\n              children: \"Token do Dropbox*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              id: \"dropboxToken\",\n              onChange: e => setDropboxToken(e.target.value),\n              value: dropboxToken,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `btn btn-primary ${error ? 'disabled' : ''}`,\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/opt/js/storage_sys/components/common/FormSignup.js"],"names":["useState","useRef","FormSignup","name","setName","email","setEmail","password","setPassword","elPassword","passwordVerify","setPasswordVerify","elPasswordVerify","dropboxToken","setDropboxToken","sent","setSent","error","setError","checkEmailExist","e","target","value","exist","fetch","json","className","focus","passCompare","current","sendData","preventDefault","rt","method","body","JSON","stringify","headers","sentContent"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\n\nexport default function FormSignup(){\n   const [name,setName] = useState('')\n   const [email,setEmail] = useState('')\n   const [password,setPassword] = useState(''),\n      elPassword = useRef(null)\n   const [passwordVerify,setPasswordVerify] = useState(''),\n      elPasswordVerify = useRef(null)\n   const [dropboxToken,setDropboxToken] = useState('')\n   const [sent,setSent] = useState(false)\n   const [error,setError] = useState(false)\n\n   const checkEmailExist = async (e) => {\n      if(e.target.value){\n         let exist = await fetch(`/api/check-email?email=${e.target.value}`)\n         exist = await exist.json()\n         if(!exist){\n            e.target.className = \"form-control\"\n            setError(false)\n         }else{\n            e.target.className = \"form-control is-invalid\"\n            e.target.focus()\n            setError(true)\n         }\n         return\n      }\n      e.target.className = \"form-control\"\n      setError(false)\n   }\n\n   const passCompare = (value) => {\n      if(value !== password || value !== passwordVerify){\n         elPasswordVerify.current.className = \"form-control is-invalid\"\n         setError(true)\n      }else{\n         elPasswordVerify.current.className = \"form-control\"\n         setError(false)\n      }\n   }\n\n   const sendData = async(e)=>{\n      e.preventDefault()\n      let rt = await fetch('/api/register', {\n         method:'POST',\n         body:JSON.stringify({\n            name,\n            email,\n            password,\n            dropboxToken\n         }),\n         headers:{'Content-Type': 'application/json'}\n      })\n      rt = await rt.json()\n      setSent(true)\n      setError(rt)\n   }\n\n   if(sent){\n      if(error){\n         var sentContent = (\n            <div className=\"alert alert-success text-center\">\n               Usuário cadastrado!\n            </div>\n         )\n      }else{\n         var sentContent =  (\n            <div className=\"alert alert-danger text-center\">\n               Usuário não foi cadastrado!\n            </div>\n         )\n      }\n   }\n\n   return(\n      <div className=\"col-lg-4 ms-lg-5\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               Cadastre-se\n            </div>\n            <div className=\"card-body\">\n               {sentContent ?\n                     sentContent\n                     :\n                        <form onSubmit={sendData}>\n                           <div className=\"mb-3\">\n                              <label htmlFor=\"name\" className=\"form-label\">Nome*</label>\n                              <input className=\"form-control\"\n                                 type=\"text\"\n                                 id=\"name\"\n                                 onChange={(e) => setName(e.target.value)}\n                                 value={name}\n                                 required\n                              />\n                           </div>\n                           <div className=\"mb-3\">\n                              <label htmlFor=\"email\" className=\"form-label\">E-mail*</label>\n                              <input className=\"form-control\"\n                                 type=\"email\"\n                                 id=\"email\"\n                                 onBlur={(e) => checkEmailExist(e)}\n                                 onChange={(e) => setEmail(e.target.value)}\n                                 value={email}\n                                 required\n                              />\n                              <div className=\"invalid-feedback\">\n                                 Usuário já existe.\n                              </div>\n                           </div>\n                           <div className=\"mb-3\">\n                              <label htmlFor=\"password\" className=\"form-label\">Senha*</label>\n                              <input className=\"form-control\"\n                                 type=\"password\"\n                                 id=\"password\"\n                                 name=\"password\"\n                                 ref={elPassword}\n                                 maxLength=\"100\"\n                                 onBlur={e => passCompare(e.target.value)}\n                                 onChange={(e) => setPassword(e.target.value)}\n                                 value={password}\n                                 required\n                              />\n                           </div>\n                           <div className=\"mb-3\">\n                              <label htmlFor=\"passwordVerify\" className=\"form-label\">Confirmar senha*</label>\n                              <input className=\"form-control\"\n                                 type=\"password\"\n                                 id=\"passwordVerify\"\n                                 name=\"passwordVerify\"\n                                 ref={elPasswordVerify}\n                                 maxLength=\"100\"\n                                 onBlur={e => passCompare(e.target.value)}\n                                 onChange={(e) => setPasswordVerify(e.target.value)}\n                                 value={passwordVerify}\n                                 required\n                              />\n                              <div className=\"invalid-feedback\">\n                                 Atenção Senhas não Coincidem\n                              </div>\n                           </div>\n                           <div className=\"mb-3\">\n                              <label htmlFor=\"dropboxToken\" className=\"form-label\">Token do Dropbox*</label>\n                              <input className=\"form-control\"\n                                 type=\"text\"\n                                 id=\"dropboxToken\"\n                                 onChange={(e) => setDropboxToken(e.target.value)}\n                                 value={dropboxToken}\n                                 required\n                              />\n                           </div>\n                           <button type=\"submit\" className={`btn btn-primary ${error ? 'disabled' : ''}`}>Cadastrar</button>\n                        </form>\n               }\n            </div>\n         </div>\n      </div>\n   );\n}\n"]},"metadata":{},"sourceType":"module"}