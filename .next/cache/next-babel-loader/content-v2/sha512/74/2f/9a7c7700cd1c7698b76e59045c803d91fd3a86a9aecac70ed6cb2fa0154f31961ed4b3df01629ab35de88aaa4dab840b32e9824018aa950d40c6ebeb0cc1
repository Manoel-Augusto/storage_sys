{"ast":null,"code":"const request = require('request');\n\nconst {\n  ObjectID\n} = require('mongodb');\n\nconst {\n  loginMongo\n} = require('../../models/mongo');\n\nconst jwt = require('jsonwebtoken');\n\nconst formidable = require('formidable');\n\nconst util = require('util');\n\nexport default async function handler(req, res) {\n  try {\n    const {\n      method,\n      cookies: {\n        tk\n      }\n    } = req;\n\n    if (tk) {\n      switch (method) {\n        case 'POST':\n          try {\n            let {\n              id\n            } = jwt.verify(tk, process.env.JWTSECRET);\n            var form = new formidable.IncomingForm();\n            form.parse(req, function (err, fields, files) {\n              console.log(util.inspect({\n                fields: fields,\n                files: files\n              }));\n            });\n            res.status(200).json({\n              error: false\n            });\n          } catch (e) {\n            res.status(200).json({\n              error: true,\n              msg: 'Falha na criação'\n            });\n          }\n\n          break;\n\n        default:\n          res.status(405).end(`Method ${method} Not Allowed`);\n      }\n    } else {\n      res.status(500).json({\n        statusCode: 500,\n        msg: \"Falha na autenticação\"\n      });\n    }\n  } catch (err) {\n    res.status(500).json({\n      statusCode: 500,\n      msg: err.message\n    });\n  }\n}","map":{"version":3,"sources":["/opt/js/storage_sys/pages/api/upload.js"],"names":["request","require","ObjectID","loginMongo","jwt","formidable","util","handler","req","res","method","cookies","tk","id","verify","process","env","JWTSECRET","form","IncomingForm","parse","err","fields","files","console","log","inspect","status","json","error","e","msg","end","statusCode","message"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeD,OAAO,CAAC,SAAD,CAA5B;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAiBF,OAAO,CAAC,oBAAD,CAA9B;;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMI,UAAU,GAAGJ,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AAEA,eAAe,eAAeM,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAgC;AAC5C,MAAG;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,OAAO,EAAC;AAACC,QAAAA;AAAD;AAAlB,QAA2BJ,GAAjC;;AACA,QAAGI,EAAH,EAAM;AACH,cAAOF,MAAP;AACG,aAAK,MAAL;AACG,cAAG;AACA,gBAAI;AAAEG,cAAAA;AAAF,gBAAST,GAAG,CAACU,MAAJ,CAAWF,EAAX,EAAeG,OAAO,CAACC,GAAR,CAAYC,SAA3B,CAAb;AACA,gBAAIC,IAAI,GAAG,IAAIb,UAAU,CAACc,YAAf,EAAX;AACAD,YAAAA,IAAI,CAACE,KAAL,CAAWZ,GAAX,EAAgB,UAASa,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,EAA6B;AAC1CC,cAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAI,CAACoB,OAAL,CAAa;AAACJ,gBAAAA,MAAM,EAAEA,MAAT;AAAiBC,gBAAAA,KAAK,EAAEA;AAAxB,eAAb,CAAZ;AACF,aAFD;AAGAd,YAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,KAAK,EAAE;AAAR,aAArB;AACF,WAPD,CAOC,OAAMC,CAAN,EAAQ;AACNrB,YAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,KAAK,EAAE,IAAR;AAAcE,cAAAA,GAAG,EAAE;AAAnB,aAArB;AACF;;AACD;;AACH;AACGtB,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBK,GAAhB,CAAqB,UAAStB,MAAO,cAArC;AAdN;AAgBF,KAjBD,MAiBK;AACFD,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACK,QAAAA,UAAU,EAAE,GAAb;AAAkBF,QAAAA,GAAG,EAAE;AAAvB,OAArB;AACF;AACH,GAtBD,CAsBC,OAAMV,GAAN,EAAU;AACRZ,IAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACK,MAAAA,UAAU,EAAE,GAAb;AAAkBF,MAAAA,GAAG,EAAEV,GAAG,CAACa;AAA3B,KAArB;AACF;AACH","sourcesContent":["const request = require('request');\nconst { ObjectID } = require('mongodb');\nconst { loginMongo } = require('../../models/mongo');\nconst jwt = require('jsonwebtoken');\nconst formidable = require('formidable');\nconst util = require('util');\n\nexport default async function handler(req, res){\n   try{\n      const { method, cookies:{tk} } = req;\n      if(tk){\n         switch(method){\n            case 'POST':\n               try{\n                  let { id } = jwt.verify(tk, process.env.JWTSECRET);\n                  var form = new formidable.IncomingForm();\n                  form.parse(req, function(err, fields, files) {\n                     console.log(util.inspect({fields: fields, files: files}));\n                  });\n                  res.status(200).json({error: false})\n               }catch(e){\n                  res.status(200).json({error: true, msg: 'Falha na criação'})\n               }\n               break;\n            default:\n               res.status(405).end(`Method ${method} Not Allowed`)\n         }\n      }else{\n         res.status(500).json({statusCode: 500, msg: \"Falha na autenticação\"})\n      }\n   }catch(err){\n      res.status(500).json({statusCode: 500, msg: err.message})\n   }\n}\n"]},"metadata":{},"sourceType":"module"}