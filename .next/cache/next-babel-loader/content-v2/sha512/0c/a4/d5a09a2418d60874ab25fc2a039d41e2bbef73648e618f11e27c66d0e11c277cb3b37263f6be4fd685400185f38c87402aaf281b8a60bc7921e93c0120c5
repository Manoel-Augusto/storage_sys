{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/js/storage_sys/components/common/ButtonsControl.js\";\nimport { useState, useEffect, useRef } from 'react';\nimport ModalCreateFolder from './ModalCreateFolder';\nexport default function ButtonsControl({\n  selected\n}) {\n  const refModalCreateFolder = useRef(null);\n  const refFilesInput = useRef(null);\n  useEffect(() => {\n    return () => $(refModalCreateFolder.current).modal('hide');\n  }, []);\n\n  const handleModalCreateFolder = () => {\n    $(refModalCreateFolder.current).modal('toggle');\n  };\n\n  const handleFilesInput = (dir = false) => {\n    refFilesInput.current.removeAttribute(\"webkitdirectory\");\n    refFilesInput.current.removeAttribute(\"directory\");\n\n    if (dir) {\n      refFilesInput.current.setAttribute(\"webkitdirectory\", \"true\");\n      refFilesInput.current.setAttribute(\"directory\", \"true\");\n    }\n\n    refFilesInput.current.click();\n  };\n\n  const filesUpload = files => {\n    files = [].slice.call(files);\n    const uploadedFiles = files.map(file => ({\n      file,\n      name: file.name,\n      path: file.webkitRelativePath ? file.webkitRelativePath : file.name\n    }));\n    uploadedFiles.forEach(async item => {\n      const data = new FormData();\n      data.append('file', item.file, item.name); //data.append('path', item.path)\n\n      let rt = await fetch('/api/upload', {\n        method: 'POST',\n        body: data,\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      });\n      console.log(rt);\n    });\n    console.log(\"File: \", uploadedFiles);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => handleModalCreateFolder(),\n      children: \"Criar Pasta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(ModalCreateFolder, {\n      refModal: refModalCreateFolder,\n      handleModal: handleModalCreateFolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this), !selected && selected !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline ms-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary dropdown-toggle\",\n          \"data-bs-toggle\": \"dropdown\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: () => handleFilesInput(),\n              children: \"Enviar Arquivos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: () => handleFilesInput(true),\n              children: \"Enviar Pasta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: refFilesInput,\n        onChange: e => filesUpload(e.target.files),\n        multiple: true,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline ms-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        children: \"Baixar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary ms-2\",\n        children: \"Excluir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n;","map":{"version":3,"sources":["/opt/js/storage_sys/components/common/ButtonsControl.js"],"names":["useState","useEffect","useRef","ModalCreateFolder","ButtonsControl","selected","refModalCreateFolder","refFilesInput","$","current","modal","handleModalCreateFolder","handleFilesInput","dir","removeAttribute","setAttribute","click","filesUpload","files","slice","call","uploadedFiles","map","file","name","path","webkitRelativePath","forEach","item","data","FormData","append","rt","fetch","method","body","headers","console","log","e","target"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport ModalCreateFolder from './ModalCreateFolder';\n\nexport default function ButtonsControl({selected}){\n   const refModalCreateFolder = useRef(null);\n   const refFilesInput = useRef(null);\n\n   useEffect(()=>{\n      return () => $(refModalCreateFolder.current).modal('hide')\n   },[])\n\n   const handleModalCreateFolder = () => {\n      $(refModalCreateFolder.current).modal('toggle')\n   }\n\n   const handleFilesInput= (dir=false) => {\n      refFilesInput.current.removeAttribute(\"webkitdirectory\");\n      refFilesInput.current.removeAttribute(\"directory\");\n      if(dir){\n         refFilesInput.current.setAttribute(\"webkitdirectory\", \"true\");\n         refFilesInput.current.setAttribute(\"directory\", \"true\");\n      }\n      refFilesInput.current.click()\n   }\n\n\n   const filesUpload = (files)=>{\n      files = [].slice.call(files);\n      const uploadedFiles = files.map(file => ({\n         file,\n         name: file.name,\n         path: file.webkitRelativePath ? file.webkitRelativePath : file.name,\n      }))\n      uploadedFiles.forEach(async(item)=>{\n         const data = new FormData()\n         data.append('file', item.file, item.name)\n         //data.append('path', item.path)\n         let rt = await fetch('/api/upload', {method:'POST', body:data, headers: {'content-type': 'multipart/form-data'}});\n         console.log(rt)\n      })\n      console.log(\"File: \", uploadedFiles)\n   }\n\n   return (\n      <div>\n         <button className=\"btn btn-primary\" onClick={() => handleModalCreateFolder()}>Criar Pasta</button>\n         <ModalCreateFolder refModal={refModalCreateFolder} handleModal={handleModalCreateFolder}/>\n         {!selected && selected !== null ?\n            <div className=\"d-inline ms-4\">\n               <div className=\"btn-group\">\n                  <button className=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\">Enviar</button>\n                  <ul className=\"dropdown-menu\">\n                     <li><button className=\"dropdown-item\" onClick={() => handleFilesInput()}>Enviar Arquivos</button></li>\n                     <li><button className=\"dropdown-item\" onClick={() => handleFilesInput(true)}>Enviar Pasta</button></li>\n                  </ul>\n               </div>\n               <input type=\"file\" ref={refFilesInput} onChange={(e) => filesUpload(e.target.files)} multiple hidden/> \n            </div>\n            :\n            <div className=\"d-inline ms-4\">\n               <button className=\"btn btn-secondary\">Baixar</button>\n               <button className=\"btn btn-secondary ms-2\">Excluir</button>\n            </div>\n         }\n      </div>\n   );\n};\n"]},"metadata":{},"sourceType":"module"}