{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/opt/js/storage_sys/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/js/storage_sys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/opt/js/storage_sys/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useData, useAuth } from '../contexts';\nimport App from '../components/app';\nimport Login from '../components/login';\nexport default function Index() {\n  _s();\n\n  var _useAuth = useAuth(),\n      session = _useAuth.session,\n      authenticated = _useAuth.authenticated;\n\n  var _useData = useData(),\n      setListRecords = _useData.setListRecords,\n      setCheckAll = _useData.setCheckAll;\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$yield$fetch$js, entries;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(authenticated && session)) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 3;\n            return fetch(\"/api/get-list-folder\", {\n              headers: {\n                'Authorization': \"Bearer \".concat(session.token)\n              }\n            });\n\n          case 3:\n            _context.next = 5;\n            return _context.sent.json();\n\n          case 5:\n            _yield$yield$fetch$js = _context.sent;\n            entries = _yield$yield$fetch$js.entries;\n\n            if (entries) {\n              setListRecords(entries);\n              setCheckAll(false);\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [authenticated]);\n\n  if (!authenticated) {\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Index, \"INRIK2xYoRyML+vdFZLY+9xQI34=\", false, function () {\n  return [useAuth, useData];\n});\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/opt/js/storage_sys/pages/index.js"],"names":["useEffect","useData","useAuth","App","Login","Index","session","authenticated","setListRecords","setCheckAll","fetch","headers","token","json","entries"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,aAAjC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,eAAe,SAASC,KAAT,GAAgB;AAAA;;AAAA,iBACOH,OAAO,EADd;AAAA,MACpBI,OADoB,YACpBA,OADoB;AAAA,MACXC,aADW,YACXA,aADW;;AAAA,iBAEYN,OAAO,EAFnB;AAAA,MAEpBO,cAFoB,YAEpBA,cAFoB;AAAA,MAEJC,WAFI,YAEJA,WAFI;;AAI5BT,EAAAA,SAAS,wEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJO,aAAa,IAAID,OADb;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAE2BI,KAAK,yBAAwB;AAACC,cAAAA,OAAO,EAAE;AAAC,kDAA0BL,OAAO,CAACM,KAAlC;AAAD;AAAV,aAAxB,CAFhC;;AAAA;AAAA;AAAA,iCAEiHC,IAFjH;;AAAA;AAAA;AAEEC,YAAAA,OAFF,yBAEEA,OAFF;;AAGJ,gBAAGA,OAAH,EAAW;AACRN,cAAAA,cAAc,CAACM,OAAD,CAAd;AACAL,cAAAA,WAAW,CAAC,KAAD,CAAX;AACF;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAQP,CAACF,aAAD,CARO,CAAT;;AAUA,MAAG,CAACA,aAAJ,EAAkB;AACf,wBACG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADH;AAGF;;AAED,sBACG,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UADH;AAGF;;GAvBuBF,K;UACcH,O,EACKD,O;;;KAFnBI,K","sourcesContent":["import { useEffect } from 'react';\nimport { useData, useAuth } from '../contexts';\nimport App from '../components/app';\nimport Login from '../components/login';\n\nexport default function Index(){\n   const { session, authenticated } = useAuth()\n   const { setListRecords, setCheckAll } = useData()\n\n   useEffect(async()=>{\n      if(authenticated && session){\n         let { entries } = await (await fetch(`/api/get-list-folder`,{headers: {'Authorization':`Bearer ${session.token}`}})).json()\n         if(entries){\n            setListRecords(entries)\n            setCheckAll(false)\n         }\n      }\n   },[authenticated])\n\n   if(!authenticated){\n      return (\n         <Login/>\n      )\n   }\n\n   return (\n      <App/>\n   )\n}\n"]},"metadata":{},"sourceType":"module"}