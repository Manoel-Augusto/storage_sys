{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/opt/js/storage_sys/contexts/models/main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nvar ContextMain = /*#__PURE__*/React.createContext();\n\nfunction ProviderMain(props) {\n  _s();\n\n  var _useState = useState(false),\n      isMobile = _useState[0],\n      setIsMobile = _useState[1];\n\n  var handleMobile = function handleMobile(size) {\n    return setIsMobile(size <= 990 || false);\n  };\n\n  var handleWidthResize = useCallback(function (event) {\n    handleMobile(innerWidth);\n    addEventListener('resize', function () {\n      handleMobile(innerWidth);\n    });\n  }, []);\n  useEffect(function () {\n    handleWidthResize();\n    return function () {\n      removeEventListener('resize', function () {\n        handleMobile(innerWidth);\n      });\n    };\n  }, [handleWidthResize]);\n  return /*#__PURE__*/_jsxDEV(ContextMain.Provider, {\n    value: {\n      isMobile: isMobile\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ProviderMain, \"KPE6RlMq1Woqyog98SWjHHv/Mww=\");\n\n_c = ProviderMain;\nexport default ProviderMain;\nexport { ContextMain };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderMain\");","map":{"version":3,"sources":["/opt/js/storage_sys/contexts/models/main.js"],"names":["React","useState","useEffect","useCallback","ContextMain","createContext","ProviderMain","props","isMobile","setIsMobile","handleMobile","size","handleWidthResize","event","innerWidth","addEventListener","removeEventListener","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAuD,OAAvD;AAEA,IAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AAAA,kBACON,QAAQ,CAAC,KAAD,CADf;AAAA,MAClBO,QADkB;AAAA,MACRC,WADQ;;AAGzB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;AAAA,WAASF,WAAW,CAACE,IAAI,IAAI,GAAR,IAAe,KAAhB,CAApB;AAAA,GAArB;;AAEA,MAAMC,iBAAiB,GAAGT,WAAW,CAAC,UAAAU,KAAK,EAAI;AAC5CH,IAAAA,YAAY,CAACI,UAAD,CAAZ;AACAC,IAAAA,gBAAgB,CAAC,QAAD,EAAW,YAAI;AAAEL,MAAAA,YAAY,CAACI,UAAD,CAAZ;AAA0B,KAA3C,CAAhB;AACF,GAHoC,EAGlC,EAHkC,CAArC;AAKAZ,EAAAA,SAAS,CAAC,YAAI;AACXU,IAAAA,iBAAiB;AACjB,WAAO,YAAM;AAACI,MAAAA,mBAAmB,CAAC,QAAD,EAAW,YAAI;AAAEN,QAAAA,YAAY,CAACI,UAAD,CAAZ;AAA0B,OAA3C,CAAnB;AAAgE,KAA9E;AACF,GAHQ,EAGP,CAACF,iBAAD,CAHO,CAAT;AAKA,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAC1BJ,MAAAA,QAAQ,EAARA;AAD0B,KAA7B;AAAA,cAGID,KAAK,CAACU;AAHV;AAAA;AAAA;AAAA;AAAA,UADH;AAOF;;GAtBQX,Y;;KAAAA,Y;AAuBT,eAAeA,YAAf;AACA,SAASF,WAAT","sourcesContent":["import React, { useState, useEffect, useCallback} from 'react';\n\nconst ContextMain = React.createContext()\n\nfunction ProviderMain(props){\n   const [isMobile, setIsMobile] = useState(false)\n\n   const handleMobile = (size)=> setIsMobile(size <= 990 || false)\n\n   const handleWidthResize = useCallback(event => {\n      handleMobile(innerWidth)\n      addEventListener('resize', ()=>{ handleMobile(innerWidth) })\n   }, []);\n\n   useEffect(()=>{\n      handleWidthResize()\n      return () => {removeEventListener('resize', ()=>{ handleMobile(innerWidth) })}\n   },[handleWidthResize])\n\n   return(\n      <ContextMain.Provider value={{\n         isMobile,\n      }}>\n         {props.children}\n      </ContextMain.Provider>\n   )\n}\nexport default ProviderMain\nexport { ContextMain }\n"]},"metadata":{},"sourceType":"module"}