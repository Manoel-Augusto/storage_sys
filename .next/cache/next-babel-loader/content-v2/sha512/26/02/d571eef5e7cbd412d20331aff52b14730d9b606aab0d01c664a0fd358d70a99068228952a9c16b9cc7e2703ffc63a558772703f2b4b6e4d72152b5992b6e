{"ast":null,"code":"const request = require('request');\n\nconst {\n  ObjectID\n} = require('mongodb');\n\nconst {\n  loginMongo\n} = require('../../models/mongo');\n\nconst jwt = require('jsonwebtoken');\n\nconst formidable = require('formidable');\n\nconst util = require('util');\n\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nexport default async function handler(req, res) {\n  //try{\n  const {\n    method,\n    cookies: {\n      tk\n    }\n  } = req;\n\n  if (tk) {\n    switch (method) {\n      case 'POST':\n        //try{\n        let {\n          id\n        } = jwt.verify(tk, process.env.JWTSECRET);\n        req.on('data', chunk => {\n          console.log(chunk);\n        });\n        /*var form = new formidable.IncomingForm();\n        form.parse(req, function(err, fields, files) {\n           console.log(util.inspect({fields: fields, files: files}));\n        });*/\n\n        res.status(200).json({\n          error: false\n        });\n        /*}catch(e){\n           res.status(200).json({error: true, msg: 'Falha na criação'})\n        }*/\n\n        break;\n\n      default:\n        res.status(405).end(`Method ${method} Not Allowed`);\n    }\n  } else {\n    res.status(500).json({\n      statusCode: 500,\n      msg: \"Falha na autenticação\"\n    });\n  }\n  /*}catch(err){\n     res.status(500).json({statusCode: 500, msg: err.message})\n  }*/\n\n}","map":{"version":3,"sources":["/opt/js/storage_sys/pages/api/upload.js"],"names":["request","require","ObjectID","loginMongo","jwt","formidable","util","config","api","bodyParser","handler","req","res","method","cookies","tk","id","verify","process","env","JWTSECRET","on","chunk","console","log","status","json","error","end","statusCode","msg"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeD,OAAO,CAAC,SAAD,CAA5B;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAiBF,OAAO,CAAC,oBAAD,CAA9B;;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMI,UAAU,GAAGJ,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AACA,OAAO,MAAMM,MAAM,GAAG;AAACC,EAAAA,GAAG,EAAE;AAACC,IAAAA,UAAU,EAAE;AAAb;AAAN,CAAf;AAEP,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAgC;AAC5C;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAO,EAAC;AAACC,MAAAA;AAAD;AAAlB,MAA2BJ,GAAjC;;AACA,MAAGI,EAAH,EAAM;AACH,YAAOF,MAAP;AACG,WAAK,MAAL;AACG;AACA,YAAI;AAAEG,UAAAA;AAAF,YAASZ,GAAG,CAACa,MAAJ,CAAWF,EAAX,EAAeG,OAAO,CAACC,GAAR,CAAYC,SAA3B,CAAb;AACAT,QAAAA,GAAG,CAACU,EAAJ,CAAO,MAAP,EAAgBC,KAAD,IAAS;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACF,SAFD;AAGA;AACZ;AACA;AACA;;AACYV,QAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,KAAK,EAAE;AAAR,SAArB;AACA;AACZ;AACA;;AACY;;AACH;AACGf,QAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBG,GAAhB,CAAqB,UAASf,MAAO,cAArC;AAjBN;AAmBF,GApBD,MAoBK;AACFD,IAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACG,MAAAA,UAAU,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB,KAArB;AACF;AACD;AACH;AACA;;AACC","sourcesContent":["const request = require('request');\nconst { ObjectID } = require('mongodb');\nconst { loginMongo } = require('../../models/mongo');\nconst jwt = require('jsonwebtoken');\nconst formidable = require('formidable');\nconst util = require('util');\nexport const config = {api: {bodyParser: false}}\n\nexport default async function handler(req, res){\n   //try{\n   const { method, cookies:{tk} } = req;\n   if(tk){\n      switch(method){\n         case 'POST':\n            //try{\n            let { id } = jwt.verify(tk, process.env.JWTSECRET);\n            req.on('data', (chunk)=>{\n               console.log(chunk)\n            })\n            /*var form = new formidable.IncomingForm();\n            form.parse(req, function(err, fields, files) {\n               console.log(util.inspect({fields: fields, files: files}));\n            });*/\n            res.status(200).json({error: false})\n            /*}catch(e){\n               res.status(200).json({error: true, msg: 'Falha na criação'})\n            }*/\n            break;\n         default:\n            res.status(405).end(`Method ${method} Not Allowed`)\n      }\n   }else{\n      res.status(500).json({statusCode: 500, msg: \"Falha na autenticação\"})\n   }\n   /*}catch(err){\n      res.status(500).json({statusCode: 500, msg: err.message})\n   }*/\n}\n"]},"metadata":{},"sourceType":"module"}