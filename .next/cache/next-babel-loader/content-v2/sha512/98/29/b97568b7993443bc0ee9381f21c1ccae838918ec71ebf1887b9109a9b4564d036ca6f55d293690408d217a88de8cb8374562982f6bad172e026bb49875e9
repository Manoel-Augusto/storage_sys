{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/opt/js/storage_sys/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/js/storage_sys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/opt/js/storage_sys/components/common/FormSignup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nexport default function FormSignup() {\n  _s();\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(''),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      password = _useState3[0],\n      setPassword = _useState3[1],\n      elPassword = useRef(null);\n\n  var _useState4 = useState(''),\n      passwordVerify = _useState4[0],\n      setPasswordVerify = _useState4[1],\n      elPasswordVerify = useRef(null);\n\n  var _useState5 = useState(''),\n      dropboxToken = _useState5[0],\n      setDropboxToken = _useState5[1];\n\n  var _useState6 = useState(false),\n      sent = _useState6[0],\n      setSent = _useState6[1];\n\n  var _useState7 = useState(false),\n      error = _useState7[0],\n      setError = _useState7[1];\n\n  var checkEmailExist = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var exist;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!e.target.value) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 3;\n              return fetch(\"/api/check-email?email=\".concat(e.target.value));\n\n            case 3:\n              exist = _context.sent;\n              _context.next = 6;\n              return exist.json();\n\n            case 6:\n              exist = _context.sent;\n\n              if (!exist) {\n                e.target.className = \"form-control\";\n                setError(false);\n              } else {\n                e.target.className = \"form-control is-invalid\";\n                e.target.focus();\n                setError(true);\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 9:\n              e.target.className = \"form-control\";\n              setError(false);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function checkEmailExist(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var passCompare = function passCompare(value) {\n    if (value !== password || value !== passwordVerify) {\n      elPasswordVerify.current.className = \"form-control is-invalid\";\n      setError(true);\n    } else {\n      elPasswordVerify.current.className = \"form-control\";\n      setError(false);\n    }\n  };\n\n  var sendData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var rt;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              _context2.next = 3;\n              return fetch('/api/register', {\n                method: 'POST',\n                body: JSON.stringify({\n                  name: name,\n                  email: email,\n                  password: password,\n                  dropboxToken: dropboxToken\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 3:\n              rt = _context2.sent;\n              _context2.next = 6;\n              return rt.json();\n\n            case 6:\n              rt = _context2.sent;\n              setSent(true);\n              setError(rt);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function sendData(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  if (sent) {\n    if (error) {\n      var sentContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success text-center\",\n        children: \"Usu\\xE1rio cadastrado!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this);\n    } else {\n      var sentContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger text-center\",\n        children: \"Usu\\xE1rio n\\xE3o foi cadastrado!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-lg-4 ms-lg-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: \"Cadastre-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: sentContent ? sentContent : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendData,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"form-label\",\n              children: \"Nome*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              id: \"name\",\n              onChange: function onChange(e) {\n                return setName(e.target.value);\n              },\n              value: name,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"form-label\",\n              children: \"E-mail*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"email\",\n              id: \"email\",\n              onBlur: function onBlur(e) {\n                return checkEmailExist(e);\n              },\n              onChange: function onChange(e) {\n                return setEmail(e.target.value);\n              },\n              value: email,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Usu\\xE1rio j\\xE1 existe.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"form-label\",\n              children: \"Senha*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              ref: elPassword,\n              maxLength: \"100\",\n              onBlur: function onBlur(e) {\n                return passCompare(e.target.value);\n              },\n              onChange: function onChange(e) {\n                return setPassword(e.target.value);\n              },\n              value: password,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"passwordVerify\",\n              className: \"form-label\",\n              children: \"Confirmar senha*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"password\",\n              id: \"passwordVerify\",\n              name: \"passwordVerify\",\n              ref: elPasswordVerify,\n              maxLength: \"100\",\n              onBlur: function onBlur(e) {\n                return passCompare(e.target.value);\n              },\n              onChange: function onChange(e) {\n                return setPasswordVerify(e.target.value);\n              },\n              value: passwordVerify,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Aten\\xE7\\xE3o Senhas n\\xE3o Coincidem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"dropboxToken\",\n              className: \"form-label\",\n              children: \"Token do Dropbox*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              id: \"dropboxToken\",\n              onChange: function onChange(e) {\n                return setDropboxToken(e.target.value);\n              },\n              value: dropboxToken,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary \".concat(error ? 'disabled' : ''),\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FormSignup, \"l9ecUoSrapvVzxGwQVGZVcR50Qk=\");\n\n_c = FormSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormSignup\");","map":{"version":3,"sources":["/opt/js/storage_sys/components/common/FormSignup.js"],"names":["useState","useRef","FormSignup","name","setName","email","setEmail","password","setPassword","elPassword","passwordVerify","setPasswordVerify","elPasswordVerify","dropboxToken","setDropboxToken","sent","setSent","error","setError","checkEmailExist","e","target","value","fetch","exist","json","className","focus","passCompare","current","sendData","preventDefault","method","body","JSON","stringify","headers","rt","sentContent"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\n\nexport default function FormSignup(){\n   const [name,setName] = useState('')\n   const [email,setEmail] = useState('')\n   const [password,setPassword] = useState(''),\n      elPassword = useRef(null)\n   const [passwordVerify,setPasswordVerify] = useState(''),\n      elPasswordVerify = useRef(null)\n   const [dropboxToken,setDropboxToken] = useState('')\n   const [sent,setSent] = useState(false)\n   const [error,setError] = useState(false)\n\n   const checkEmailExist = async (e) => {\n      if(e.target.value){\n         let exist = await fetch(`/api/check-email?email=${e.target.value}`)\n         exist = await exist.json()\n         if(!exist){\n            e.target.className = \"form-control\"\n            setError(false)\n         }else{\n            e.target.className = \"form-control is-invalid\"\n            e.target.focus()\n            setError(true)\n         }\n         return\n      }\n      e.target.className = \"form-control\"\n      setError(false)\n   }\n\n   const passCompare = (value) => {\n      if(value !== password || value !== passwordVerify){\n         elPasswordVerify.current.className = \"form-control is-invalid\"\n         setError(true)\n      }else{\n         elPasswordVerify.current.className = \"form-control\"\n         setError(false)\n      }\n   }\n\n   const sendData = async(e)=>{\n      e.preventDefault()\n      let rt = await fetch('/api/register', {\n         method:'POST',\n         body:JSON.stringify({\n            name,\n            email,\n            password,\n            dropboxToken\n         }),\n         headers:{'Content-Type': 'application/json'}\n      })\n      rt = await rt.json()\n      setSent(true)\n      setError(rt)\n   }\n\n   if(sent){\n      if(error){\n         var sentContent = (\n            <div className=\"alert alert-success text-center\">\n               Usuário cadastrado!\n            </div>\n         )\n      }else{\n         var sentContent =  (\n            <div className=\"alert alert-danger text-center\">\n               Usuário não foi cadastrado!\n            </div>\n         )\n      }\n   }\n\n   return(\n      <div className=\"col-lg-4 ms-lg-5\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               Cadastre-se\n            </div>\n            <div className=\"card-body\">\n               {sentContent ?\n                     sentContent\n                     :\n                        <form onSubmit={sendData}>\n                           <div className=\"mb-3\">\n                              <label htmlFor=\"name\" className=\"form-label\">Nome*</label>\n                              <input className=\"form-control\"\n                                 type=\"text\"\n                                 id=\"name\"\n                                 onChange={(e) => setName(e.target.value)}\n                                 value={name}\n                                 required\n                              />\n                           </div>\n                           <div className=\"mb-3\">\n                              <label htmlFor=\"email\" className=\"form-label\">E-mail*</label>\n                              <input className=\"form-control\"\n                                 type=\"email\"\n                                 id=\"email\"\n                                 onBlur={(e) => checkEmailExist(e)}\n                                 onChange={(e) => setEmail(e.target.value)}\n                                 value={email}\n                                 required\n                              />\n                              <div className=\"invalid-feedback\">\n                                 Usuário já existe.\n                              </div>\n                           </div>\n                           <div className=\"mb-3\">\n                              <label htmlFor=\"password\" className=\"form-label\">Senha*</label>\n                              <input className=\"form-control\"\n                                 type=\"password\"\n                                 id=\"password\"\n                                 name=\"password\"\n                                 ref={elPassword}\n                                 maxLength=\"100\"\n                                 onBlur={e => passCompare(e.target.value)}\n                                 onChange={(e) => setPassword(e.target.value)}\n                                 value={password}\n                                 required\n                              />\n                           </div>\n                           <div className=\"mb-3\">\n                              <label htmlFor=\"passwordVerify\" className=\"form-label\">Confirmar senha*</label>\n                              <input className=\"form-control\"\n                                 type=\"password\"\n                                 id=\"passwordVerify\"\n                                 name=\"passwordVerify\"\n                                 ref={elPasswordVerify}\n                                 maxLength=\"100\"\n                                 onBlur={e => passCompare(e.target.value)}\n                                 onChange={(e) => setPasswordVerify(e.target.value)}\n                                 value={passwordVerify}\n                                 required\n                              />\n                              <div className=\"invalid-feedback\">\n                                 Atenção Senhas não Coincidem\n                              </div>\n                           </div>\n                           <div className=\"mb-3\">\n                              <label htmlFor=\"dropboxToken\" className=\"form-label\">Token do Dropbox*</label>\n                              <input className=\"form-control\"\n                                 type=\"text\"\n                                 id=\"dropboxToken\"\n                                 onChange={(e) => setDropboxToken(e.target.value)}\n                                 value={dropboxToken}\n                                 required\n                              />\n                           </div>\n                           <button type=\"submit\" className={`btn btn-primary ${error ? 'disabled' : ''}`}>Cadastrar</button>\n                        </form>\n               }\n            </div>\n         </div>\n      </div>\n   );\n}\n"]},"metadata":{},"sourceType":"module"}