{"ast":null,"code":"const {\n  loginMongo\n} = require('../../models/mongo');\n\nconst checkEmail = async email => {\n  let {\n    db,\n    client\n  } = await loginMongo(process.env.MONGODB, 'users');\n  let result = await db.findOne({\n    email\n  }, {\n    projection: {\n      _id: 1\n    }\n  });\n  client.close();\n\n  if (result) {\n    return true;\n  }\n\n  return false;\n};\n\nexport default async function handler(req, res) {\n  try {\n    const {\n      method\n    } = req;\n\n    if (method === 'GET') {\n      let {\n        email\n      } = req.query;\n      res.status(200).json(await checkEmail(email));\n    } else {\n      res.status(405).end(`Method ${method} Not Allowed`);\n    }\n  } catch (err) {\n    res.status(500).json({\n      statusCode: 500,\n      msg: err.message\n    });\n  }\n}","map":{"version":3,"sources":["/opt/js/storage_sys/pages/api/check-email.js"],"names":["loginMongo","require","checkEmail","email","db","client","process","env","MONGODB","result","findOne","projection","_id","close","handler","req","res","method","query","status","json","end","err","statusCode","msg","message"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAiBC,OAAO,CAAC,oBAAD,CAA9B;;AAEA,MAAMC,UAAU,GAAG,MAAMC,KAAN,IAAc;AAC9B,MAAI;AAACC,IAAAA,EAAD;AAAKC,IAAAA;AAAL,MAAe,MAAML,UAAU,CAACM,OAAO,CAACC,GAAR,CAAYC,OAAb,EAAsB,OAAtB,CAAnC;AACA,MAAIC,MAAM,GAAG,MAAML,EAAE,CAACM,OAAH,CAAW;AAACP,IAAAA;AAAD,GAAX,EAAmB;AAAEQ,IAAAA,UAAU,EAAC;AAACC,MAAAA,GAAG,EAAC;AAAL;AAAb,GAAnB,CAAnB;AACAP,EAAAA,MAAM,CAACQ,KAAP;;AACA,MAAGJ,MAAH,EAAU;AACP,WAAO,IAAP;AACF;;AACD,SAAO,KAAP;AACF,CARD;;AAUA,eAAe,eAAeK,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAgC;AAC5C,MAAG;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAaF,GAAnB;;AACA,QAAGE,MAAM,KAAK,KAAd,EAAoB;AACjB,UAAI;AAAEd,QAAAA;AAAF,UAAYY,GAAG,CAACG,KAApB;AACAF,MAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,MAAMlB,UAAU,CAACC,KAAD,CAArC;AACF,KAHD,MAGK;AACFa,MAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBE,GAAhB,CAAqB,UAASJ,MAAO,cAArC;AACF;AACH,GARD,CAQC,OAAMK,GAAN,EAAU;AACRN,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACG,MAAAA,UAAU,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAEF,GAAG,CAACG;AAA3B,KAArB;AACF;AACH","sourcesContent":["const { loginMongo } = require('../../models/mongo');\n\nconst checkEmail = async(email)=>{\n   let {db, client} = await loginMongo(process.env.MONGODB, 'users')\n   let result = await db.findOne({email},{ projection:{_id:1}})\n   client.close()\n   if(result){\n      return true\n   }\n   return false\n}\n\nexport default async function handler(req, res){\n   try{\n      const { method } = req;\n      if(method === 'GET'){\n         let { email } = req.query\n         res.status(200).json(await checkEmail(email))\n      }else{\n         res.status(405).end(`Method ${method} Not Allowed`)\n      }\n   }catch(err){\n      res.status(500).json({statusCode: 500, msg: err.message})\n   }\n}\n"]},"metadata":{},"sourceType":"module"}