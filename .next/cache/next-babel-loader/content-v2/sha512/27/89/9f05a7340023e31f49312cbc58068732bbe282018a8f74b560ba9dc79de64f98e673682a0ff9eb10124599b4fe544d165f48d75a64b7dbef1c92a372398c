{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/opt/js/storage_sys/node_modules/@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"/opt/js/storage_sys/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"/opt/js/storage_sys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/opt/js/storage_sys/contexts/models/auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useRouter } from 'next/router';\nvar ContextAuth = /*#__PURE__*/React.createContext();\n\nfunction ProviderAuth(props) {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState(),\n      session = _useState[0],\n      setSession = _useState[1];\n\n  var _useState2 = useState(false),\n      cookies = _useState2[0],\n      setCookies = _useState2[1];\n\n  var _useState3 = useState(true),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState(false),\n      authenticated = _useState4[0],\n      setAuthenticated = _useState4[1];\n\n  useEffect(function () {\n    var handleAuthenticated = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$yield$fetch$js, error, rest;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('/api/check-auth');\n\n              case 2:\n                _context.next = 4;\n                return _context.sent.json();\n\n              case 4:\n                _yield$yield$fetch$js = _context.sent;\n                error = _yield$yield$fetch$js.error;\n                rest = _objectWithoutProperties(_yield$yield$fetch$js, [\"error\"]);\n\n                if (!error) {\n                  setSession(rest);\n                }\n\n                setLoading(false);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handleAuthenticated() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    handleAuthenticated();\n  }, []);\n\n  var createSession = function createSession(user) {\n    localStorage.setItem(\"ss\", JSON.stringify(user));\n    setSession(user);\n    setAuthenticated(true);\n  };\n\n  var removeSession = function removeSession() {\n    localStorage.removeItem(\"ss\");\n    setSession(null);\n    setAuthenticated(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContextAuth.Provider, {\n    value: {\n      session: session,\n      loading: loading,\n      setCookies: setCookies,\n      setSession: setSession,\n      authenticated: authenticated,\n      createSession: createSession,\n      removeSession: removeSession\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ProviderAuth, \"EOQleyByBD5QzwRdOJ5FCqv8ag8=\", false, function () {\n  return [useRouter];\n});\n\n_c = ProviderAuth;\nexport default ProviderAuth;\nexport { ContextAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderAuth\");","map":{"version":3,"sources":["/opt/js/storage_sys/contexts/models/auth.js"],"names":["React","useState","useEffect","useCallback","useRouter","ContextAuth","createContext","ProviderAuth","props","router","session","setSession","cookies","setCookies","loading","setLoading","authenticated","setAuthenticated","handleAuthenticated","fetch","json","error","rest","createSession","user","localStorage","setItem","JSON","stringify","removeSession","removeItem","children"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AACzB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AADyB,kBAEIH,QAAQ,EAFZ;AAAA,MAElBS,OAFkB;AAAA,MAEVC,UAFU;;AAAA,mBAGIV,QAAQ,CAAC,KAAD,CAHZ;AAAA,MAGlBW,OAHkB;AAAA,MAGVC,UAHU;;AAAA,mBAIIZ,QAAQ,CAAC,IAAD,CAJZ;AAAA,MAIlBa,OAJkB;AAAA,MAIVC,UAJU;;AAAA,mBAKgBd,QAAQ,CAAC,KAAD,CALxB;AAAA,MAKlBe,aALkB;AAAA,MAKJC,gBALI;;AAOzBf,EAAAA,SAAS,CAAC,YAAI;AACX,QAAMgB,mBAAmB;AAAA,0EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACYC,KAAK,CAAC,iBAAD,CADjB;;AAAA;AAAA;AAAA,qCACsCC,IADtC;;AAAA;AAAA;AACnBC,gBAAAA,KADmB,yBACnBA,KADmB;AACTC,gBAAAA,IADS;;AAEzB,oBAAG,CAACD,KAAJ,EAAU;AACPV,kBAAAA,UAAU,CAACW,IAAD,CAAV;AACF;;AACDP,gBAAAA,UAAU,CAAC,KAAD,CAAV;;AALyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAnBG,mBAAmB;AAAA;AAAA;AAAA,OAAzB;;AAOAA,IAAAA,mBAAmB;AACrB,GATQ,EASP,EATO,CAAT;;AAWA,MAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAQ;AAC3BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA3B;AACAb,IAAAA,UAAU,CAACa,IAAD,CAAV;AACAP,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACF,GAJD;;AAMA,MAAMY,aAAa,GAAG,SAAhBA,aAAgB,GAAI;AACvBJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,IAAxB;AACAnB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACF,GAJD;;AAMA,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAC1BP,MAAAA,OAAO,EAAPA,OAD0B;AAE1BI,MAAAA,OAAO,EAAPA,OAF0B;AAG1BD,MAAAA,UAAU,EAAVA,UAH0B;AAI1BF,MAAAA,UAAU,EAAVA,UAJ0B;AAK1BK,MAAAA,aAAa,EAAbA,aAL0B;AAM1BO,MAAAA,aAAa,EAAbA,aAN0B;AAO1BM,MAAAA,aAAa,EAAbA;AAP0B,KAA7B;AAAA,cASIrB,KAAK,CAACuB;AATV;AAAA;AAAA;AAAA;AAAA,UADH;AAaF;;GA3CQxB,Y;UACSH,S;;;KADTG,Y;AA6CT,eAAeA,YAAf;AACA,SAASF,WAAT","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useRouter } from 'next/router'\n\nconst ContextAuth = React.createContext()\n\nfunction ProviderAuth(props){\n   const router = useRouter()\n   const [session,setSession] = useState()\n   const [cookies,setCookies] = useState(false)\n   const [loading,setLoading] = useState(true)\n   const [authenticated,setAuthenticated] = useState(false)\n\n   useEffect(()=>{\n      const handleAuthenticated = async()=>{\n         let { error, ...rest} = await (await fetch('/api/check-auth')).json()\n         if(!error){\n            setSession(rest)\n         }\n         setLoading(false)\n      }\n      handleAuthenticated()\n   },[])\n\n   const createSession = (user)=>{\n      localStorage.setItem(\"ss\", JSON.stringify(user))\n      setSession(user)\n      setAuthenticated(true)\n   }\n\n   const removeSession = ()=>{\n      localStorage.removeItem(\"ss\")\n      setSession(null)\n      setAuthenticated(false)\n   }\n\n   return(\n      <ContextAuth.Provider value={{\n         session,\n         loading,\n         setCookies,\n         setSession,\n         authenticated,\n         createSession,\n         removeSession\n      }}>\n         {props.children}\n      </ContextAuth.Provider>\n   )\n}\n\nexport default ProviderAuth\nexport { ContextAuth }\n"]},"metadata":{},"sourceType":"module"}