{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/opt/js/storage_sys/components/common/Breadcrumbs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nvar convertBreadcrumb = function convertBreadcrumb(string) {\n  return string.replace(/-/g, ' ').replace(/oe/g, 'ö').replace(/ae/g, 'ä').replace(/ue/g, 'ü').toUpperCase();\n};\n\nexport default function Breadcrumbs() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n\n  var _useState = useState(null),\n      breadcrumbs = _useState[0],\n      setBreadcrumbs = _useState[1];\n\n  useEffect(function () {\n    if (router) {\n      var linkPath = router.asPath.split('/');\n      linkPath = linkPath.filter(function (item) {\n        return item.length;\n      });\n      var pathArray = linkPath.map(function (path, i) {\n        return {\n          breadcrumb: path.replace(/(.{20})..+/, \"$1...\"),\n          href: '/' + linkPath.slice(0, i + 1).join('/')\n        };\n      });\n      pathArray.unshift({\n        breadcrumb: 'home',\n        href: '/'\n      });\n      setBreadcrumbs(pathArray);\n    }\n  }, [router]);\n\n  if (!breadcrumbs) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"breadcrumb mb-0 px-3\",\n    children: breadcrumbs.map(function (breadcrumb, i) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item my-2\",\n        children: i + 1 < breadcrumbs.length ? /*#__PURE__*/_jsxDEV(Link, {\n          href: breadcrumb.href,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: convertBreadcrumb(breadcrumb.breadcrumb)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }, _this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"fw-bold\",\n          children: convertBreadcrumb(breadcrumb.breadcrumb)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, _this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Breadcrumbs, \"JHjLv+6W/PY975mVYth7LeJ/BwQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = Breadcrumbs;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"sources":["/opt/js/storage_sys/components/common/Breadcrumbs.js"],"names":["React","useEffect","useState","useRouter","Link","convertBreadcrumb","string","replace","toUpperCase","Breadcrumbs","router","breadcrumbs","setBreadcrumbs","linkPath","asPath","split","filter","item","length","pathArray","map","path","i","breadcrumb","href","slice","join","unshift"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,MAAM,EAAI;AACjC,SAAOA,MAAM,CACTC,OADG,CACK,IADL,EACW,GADX,EAEHA,OAFG,CAEK,KAFL,EAEY,GAFZ,EAGHA,OAHG,CAGK,KAHL,EAGY,GAHZ,EAIHA,OAJG,CAIK,KAJL,EAIY,GAJZ,EAKHC,WALG,EAAP;AAMF,CAPD;;AASA,eAAe,SAASC,WAAT,GAAsB;AAAA;;AAAA;;AAClC,MAAMC,MAAM,GAAGP,SAAS,EAAxB;;AADkC,kBAEID,QAAQ,CAAC,IAAD,CAFZ;AAAA,MAE3BS,WAF2B;AAAA,MAEdC,cAFc;;AAIlCX,EAAAA,SAAS,CAAC,YAAM;AACb,QAAIS,MAAJ,EAAY;AACT,UAAIG,QAAQ,GAAGH,MAAM,CAACI,MAAP,CAAcC,KAAd,CAAoB,GAApB,CAAf;AACAF,MAAAA,QAAQ,GAAGA,QAAQ,CAACG,MAAT,CAAgB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,MAAT;AAAA,OAApB,CAAX;AAEA,UAAMC,SAAS,GAAGN,QAAQ,CAACO,GAAT,CAAa,UAACC,IAAD,EAAOC,CAAP,EAAa;AACzC,eAAO;AACJC,UAAAA,UAAU,EAAEF,IAAI,CAACd,OAAL,CAAa,YAAb,EAA2B,OAA3B,CADR;AAEJiB,UAAAA,IAAI,EAAE,MAAMX,QAAQ,CAACY,KAAT,CAAe,CAAf,EAAkBH,CAAC,GAAG,CAAtB,EAAyBI,IAAzB,CAA8B,GAA9B;AAFR,SAAP;AAGF,OAJiB,CAAlB;AAKAP,MAAAA,SAAS,CAACQ,OAAV,CAAkB;AAAEJ,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OAAlB;AAEAZ,MAAAA,cAAc,CAACO,SAAD,CAAd;AACF;AACH,GAdQ,EAcN,CAACT,MAAD,CAdM,CAAT;;AAgBA,MAAI,CAACC,WAAL,EAAkB;AACf,WAAO,IAAP;AACF;;AAED,sBACG;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA,cACIA,WAAW,CAACS,GAAZ,CAAgB,UAACG,UAAD,EAAaD,CAAb;AAAA,0BACjB;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA,kBACIA,CAAC,GAAC,CAAF,GAAMX,WAAW,CAACO,MAAlB,gBACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEK,UAAU,CAACC,IAAvB;AAAA,iCACG;AAAA,sBAAInB,iBAAiB,CAACkB,UAAU,CAACA,UAAZ;AAArB;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,iBADF,gBAKE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA,oBAA2BlB,iBAAiB,CAACkB,UAAU,CAACA,UAAZ;AAA5C;AAAA;AAAA;AAAA;AAAA;AANN,SAA0CD,CAA1C;AAAA;AAAA;AAAA;AAAA,eADiB;AAAA,KAAhB;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAeF;;GAvCuBb,W;UACNN,S;;;KADMM,W;AAuCvB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nconst convertBreadcrumb = string => {\n   return string\n      .replace(/-/g, ' ')\n      .replace(/oe/g, 'ö')\n      .replace(/ae/g, 'ä')\n      .replace(/ue/g, 'ü')\n      .toUpperCase();\n};\n\nexport default function Breadcrumbs(){\n   const router = useRouter();\n   const [breadcrumbs, setBreadcrumbs] = useState(null);\n\n   useEffect(() => {\n      if (router) {\n         let linkPath = router.asPath.split('/');\n         linkPath = linkPath.filter(item => item.length)\n\n         const pathArray = linkPath.map((path, i) => {\n            return {\n               breadcrumb: path.replace(/(.{20})..+/, \"$1...\"),\n               href: '/' + linkPath.slice(0, i + 1).join('/') };\n         });\n         pathArray.unshift({ breadcrumb: 'home', href: '/' })\n\n         setBreadcrumbs(pathArray);\n      }\n   }, [router]);\n\n   if (!breadcrumbs) {\n      return null;\n   }\n\n   return (\n      <ol className=\"breadcrumb mb-0 px-3\">\n         {breadcrumbs.map((breadcrumb, i) =>\n         <li className=\"breadcrumb-item my-2\" key={i}>\n            {i+1 < breadcrumbs.length ?\n               <Link href={breadcrumb.href}>\n                  <a>{convertBreadcrumb(breadcrumb.breadcrumb)}</a>\n               </Link>\n               :\n               <span className=\"fw-bold\">{convertBreadcrumb(breadcrumb.breadcrumb)}</span>\n            }\n         </li>\n         )}\n      </ol>\n   );\n};\n"]},"metadata":{},"sourceType":"module"}