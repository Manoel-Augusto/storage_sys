{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/js/storage_sys/components/common/ButtonsControl.js\";\nimport { useEffect, useRef } from 'react';\nimport ModalCreateFolder from './ModalCreateFolder';\nimport ButtonsUpload from './ButtonsUpload';\nimport { useData } from '../../contexts';\nexport default function ButtonsControl({\n  selected\n}) {\n  const {\n    listRecords\n  } = useData();\n  const refModalCreateFolder = useRef(null);\n  useEffect(() => {\n    return () => $(refModalCreateFolder.current).modal('hide');\n  }, []);\n\n  const handleModalCreateFolder = () => {\n    $(refModalCreateFolder.current).modal('toggle');\n  };\n\n  const handleDownload = async () => {\n    let listSelected = listRecords.filter(item => item.selected);\n\n    for (let record of listSelected) {\n      let rt = await fetch('/api/download', {\n        method: 'POST',\n        body: JSON.stringify({\n          path: record.path_display,\n          type: record[\".tag\"]\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(r => r.blob());\n      const link = document.createElement('a');\n      const url = window.URL.createObjectURL(rt);\n      link.href = url;\n      link.setAttribute('download', record[\".tag\"] === 'file' ? record.name : `${record.name}.zip`);\n      document.body.appendChild(link);\n      link.click();\n    }\n  };\n\n  const handleDelete = async () => {\n    let listSelected = listRecords.filter(item => item.selected);\n\n    for (let record of listSelected) {\n      console.log(record);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => handleModalCreateFolder(),\n      children: \"Criar Pasta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(ModalCreateFolder, {\n      refModal: refModalCreateFolder,\n      handleModal: handleModalCreateFolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this), !selected && selected !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline ms-4\",\n      children: /*#__PURE__*/_jsxDEV(ButtonsUpload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline ms-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => handleDownload(),\n        children: \"Baixar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary ms-2\",\n        onClick: () => handleDelete(),\n        children: \"Excluir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n;","map":{"version":3,"sources":["/opt/js/storage_sys/components/common/ButtonsControl.js"],"names":["useEffect","useRef","ModalCreateFolder","ButtonsUpload","useData","ButtonsControl","selected","listRecords","refModalCreateFolder","$","current","modal","handleModalCreateFolder","handleDownload","listSelected","filter","item","record","rt","fetch","method","body","JSON","stringify","path","path_display","type","headers","then","r","blob","link","document","createElement","url","window","URL","createObjectURL","href","setAttribute","name","appendChild","click","handleDelete","console","log"],"mappings":"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","sourcesContent":["import { useEffect, useRef } from 'react';\nimport ModalCreateFolder from './ModalCreateFolder';\nimport ButtonsUpload from './ButtonsUpload';\nimport { useData } from '../../contexts';\n\nexport default function ButtonsControl({selected}){\n   const { listRecords } = useData()\n   const refModalCreateFolder = useRef(null);\n\n   useEffect(()=>{\n      return () => $(refModalCreateFolder.current).modal('hide')\n   },[])\n\n   const handleModalCreateFolder = () => {\n      $(refModalCreateFolder.current).modal('toggle')\n   }\n\n   const handleDownload = async() => {\n      let listSelected = listRecords.filter(item => item.selected)\n      for(let record of listSelected){\n         let rt = await fetch('/api/download', {\n            method:'POST',\n            body:JSON.stringify({path: record.path_display, type: record[\".tag\"]}),\n            headers:{'Content-Type': 'application/json'}\n         }).then(r => r.blob())\n         const link = document.createElement('a')\n         const url = window.URL.createObjectURL(rt)\n         link.href = url\n         link.setAttribute('download', record[\".tag\"]==='file' ? record.name : `${record.name}.zip`)\n         document.body.appendChild(link)\n         link.click()\n      }\n   }\n\n   const handleDelete = async() => {\n      let listSelected = listRecords.filter(item => item.selected)\n      for(let record of listSelected){\n         console.log(record)\n      }\n   }\n\n   return (\n      <div>\n         <button className=\"btn btn-primary\" onClick={() => handleModalCreateFolder()}>Criar Pasta</button>\n         <ModalCreateFolder refModal={refModalCreateFolder} handleModal={handleModalCreateFolder}/>\n         {!selected && selected !== null ?\n            <div className=\"d-inline ms-4\">\n               <ButtonsUpload/>\n            </div>\n            :\n            <div className=\"d-inline ms-4\">\n               <button className=\"btn btn-secondary\" onClick={() => handleDownload()}>Baixar</button>\n               <button className=\"btn btn-secondary ms-2\" onClick={() => handleDelete()}>Excluir</button>\n            </div>\n         }\n      </div>\n   );\n};\n"]},"metadata":{},"sourceType":"module"}