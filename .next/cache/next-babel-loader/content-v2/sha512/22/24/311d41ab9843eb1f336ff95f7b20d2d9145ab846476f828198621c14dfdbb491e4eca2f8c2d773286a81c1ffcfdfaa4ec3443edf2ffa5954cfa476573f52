{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/opt/js/storage_sys/pages/share/[slug].js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nexport default function Index() {\n  const router = useRouter();\n  const {\n    slug\n  } = router.query;\n  const {\n    0: file,\n    1: setFile\n  } = useState({});\n  useEffect(async () => {\n    let _await$fetch$then = await fetch(`/api/share-link?link=${encodeURIComponent(slug)}`).then(r => r.json()),\n        {\n      error\n    } = _await$fetch$then,\n        rest = _objectWithoutProperties(_await$fetch$then, [\"error\"]);\n\n    if (!error) {\n      setFile(rest);\n    }\n\n    console.log(slug, rest);\n  }, []);\n\n  const handleDownload = async () => {\n    let {\n      file_id,\n      name,\n      type\n    } = file;\n    let rt = await fetch('/api/share-download', {\n      method: 'POST',\n      body: JSON.stringify({\n        path: file_id,\n        type\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(r => r.blob());\n    const link = document.createElement('a');\n    const url = window.URL.createObjectURL(rt);\n    link.href = url;\n    link.setAttribute('download', type === 'file' ? name : `${name}.zip`);\n    document.body.appendChild(link);\n    link.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => handleDownload(),\n          children: \"Baixar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/opt/js/storage_sys/pages/share/[slug].js"],"names":["useEffect","useState","useRouter","Index","router","slug","query","file","setFile","fetch","encodeURIComponent","then","r","json","error","rest","console","log","handleDownload","file_id","name","type","rt","method","body","JSON","stringify","path","headers","blob","link","document","createElement","url","window","URL","createObjectURL","href","setAttribute","appendChild","click"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,KAAT,GAAgB;AAC5B,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAWD,MAAM,CAACE,KAAxB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,YAAS;AAChB,4BAAuB,MAAMS,KAAK,CAAE,wBAAuBC,kBAAkB,CAACL,IAAD,CAAO,EAAlD,CAAL,CAA0DM,IAA1D,CAA+DC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAApE,CAA7B;AAAA,QAAI;AAACC,MAAAA;AAAD,KAAJ;AAAA,QAAeC,IAAf;;AACA,QAAG,CAACD,KAAJ,EAAU;AACPN,MAAAA,OAAO,CAACO,IAAD,CAAP;AACF;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ,EAAkBU,IAAlB;AACF,GANQ,EAMP,EANO,CAAT;;AAQA,QAAMG,cAAc,GAAG,YAAW;AAC/B,QAAI;AAACC,MAAAA,OAAD;AAAUC,MAAAA,IAAV;AAAgBC,MAAAA;AAAhB,QAAwBd,IAA5B;AACA,QAAIe,EAAE,GAAG,MAAMb,KAAK,CAAC,qBAAD,EAAwB;AACzCc,MAAAA,MAAM,EAAC,MADkC;AAEzCC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,IAAI,EAAER,OAAP;AAAgBE,QAAAA;AAAhB,OAAf,CAFoC;AAGzCO,MAAAA,OAAO,EAAC;AAAC,wBAAgB;AAAjB;AAHiC,KAAxB,CAAL,CAIZjB,IAJY,CAIPC,CAAC,IAAIA,CAAC,CAACiB,IAAF,EAJE,CAAf;AAKA,UAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACA,UAAMC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2Bd,EAA3B,CAAZ;AACAQ,IAAAA,IAAI,CAACO,IAAL,GAAYJ,GAAZ;AACAH,IAAAA,IAAI,CAACQ,YAAL,CAAkB,UAAlB,EAA8BjB,IAAI,KAAG,MAAP,GAAgBD,IAAhB,GAAwB,GAAEA,IAAK,MAA7D;AACAW,IAAAA,QAAQ,CAACP,IAAT,CAAce,WAAd,CAA0BT,IAA1B;AACAA,IAAAA,IAAI,CAACU,KAAL;AACF,GAbD;;AAeA,sBACG;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACG;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACG;AAAA,oBAAKjC,IAAI,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE,MAAMF,cAAc,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADH;AAUF","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router'\n\nexport default function Index(){\n   const router = useRouter()\n   const { slug } = router.query\n   const [file, setFile] = useState({})\n\n   useEffect(async()=>{\n      let {error, ...rest} = await fetch(`/api/share-link?link=${encodeURIComponent(slug)}`).then(r => r.json())\n      if(!error){\n         setFile(rest)\n      }\n      console.log(slug, rest)\n   },[])\n\n   const handleDownload = async() => {\n      let {file_id, name, type} = file\n      let rt = await fetch('/api/share-download', {\n         method:'POST',\n         body:JSON.stringify({path: file_id, type}),\n         headers:{'Content-Type': 'application/json'}\n      }).then(r => r.blob())\n      const link = document.createElement('a')\n      const url = window.URL.createObjectURL(rt)\n      link.href = url\n      link.setAttribute('download', type==='file' ? name : `${name}.zip`)\n      document.body.appendChild(link)\n      link.click()\n   }\n\n   return (\n      <div className=\"container\">\n         <div className=\"row justify-content-center mt-5\">\n            <div className=\"col-4 text-center\">\n               <h1>{file.name}</h1>\n               <button className=\"btn btn-primary\" onClick={() => handleDownload()}>Baixar</button>\n            </div>\n         </div>\n      </div>\n   )\n}\n"]},"metadata":{},"sourceType":"module"}