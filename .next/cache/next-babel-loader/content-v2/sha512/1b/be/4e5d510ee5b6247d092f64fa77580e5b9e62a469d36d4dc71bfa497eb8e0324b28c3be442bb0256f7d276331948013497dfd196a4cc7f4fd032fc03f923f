{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/opt/js/storage_sys/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/opt/js/storage_sys/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/opt/js/storage_sys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/opt/js/storage_sys/components/common/ButtonsUpload.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { useData } from '../../contexts';\nexport default function ButtonsUpload() {\n  _s();\n\n  var router = useRouter();\n\n  var _useData = useData(),\n      getData = _useData.getData;\n\n  var refFilesInput = useRef(null);\n\n  var handleFilesInput = function handleFilesInput() {\n    var dir = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    refFilesInput.current.removeAttribute(\"webkitdirectory\");\n    refFilesInput.current.removeAttribute(\"directory\");\n\n    if (dir) {\n      refFilesInput.current.setAttribute(\"webkitdirectory\", \"true\");\n      refFilesInput.current.setAttribute(\"directory\", \"true\");\n    }\n\n    refFilesInput.current.click();\n  };\n\n  var filesUpload = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(files) {\n      var linkPath, folder, _i, _arr, file, form, _yield$fetch$then, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              linkPath = router.asPath.split('/');\n              linkPath = linkPath.filter(function (item) {\n                return item.length;\n              });\n              folder = \"\".concat(linkPath.length ? \"/\".concat(linkPath.join('/')) : '', \"/\");\n              _i = 0, _arr = _toConsumableArray(files);\n\n            case 4:\n              if (!(_i < _arr.length)) {\n                _context.next = 17;\n                break;\n              }\n\n              file = _arr[_i];\n              form = new FormData();\n              form.append('file', file, file.name);\n              form.append('path', \"\".concat(folder).concat(file.webkitRelativePath ? file.webkitRelativePath : file.name));\n              _context.next = 11;\n              return fetch('/api/upload', {\n                method: 'POST',\n                body: form\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 11:\n              _yield$fetch$then = _context.sent;\n              error = _yield$fetch$then.error;\n              console.log(error);\n\n            case 14:\n              _i++;\n              _context.next = 4;\n              break;\n\n            case 17:\n              getData();\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function filesUpload(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary dropdown-toggle\",\n        \"data-bs-toggle\": \"dropdown\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dropdown-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropdown-item\",\n            onClick: function onClick() {\n              return handleFilesInput();\n            },\n            children: \"Enviar Arquivos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropdown-item\",\n            onClick: function onClick() {\n              return handleFilesInput(true);\n            },\n            children: \"Enviar Pasta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: refFilesInput,\n      onChange: function onChange(e) {\n        return filesUpload(e.target.files);\n      },\n      value: \"\",\n      multiple: true,\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ButtonsUpload, \"Cfc6+gflqI6ijnGfe0KMVVMUrX8=\", false, function () {\n  return [useRouter, useData];\n});\n\n_c = ButtonsUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonsUpload\");","map":{"version":3,"sources":["/opt/js/storage_sys/components/common/ButtonsUpload.js"],"names":["useRef","useRouter","useData","ButtonsUpload","router","getData","refFilesInput","handleFilesInput","dir","current","removeAttribute","setAttribute","click","filesUpload","files","linkPath","asPath","split","filter","item","length","folder","join","file","form","FormData","append","name","webkitRelativePath","fetch","method","body","then","res","json","error","console","log","e","target"],"mappings":"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","sourcesContent":["import { useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { useData } from '../../contexts';\n\nexport default function ButtonsUpload(){\n   const router = useRouter();\n   const { getData } = useData()\n   const refFilesInput = useRef(null);\n\n   const handleFilesInput= (dir=false) => {\n      refFilesInput.current.removeAttribute(\"webkitdirectory\");\n      refFilesInput.current.removeAttribute(\"directory\");\n      if(dir){\n         refFilesInput.current.setAttribute(\"webkitdirectory\", \"true\");\n         refFilesInput.current.setAttribute(\"directory\", \"true\");\n      }\n      refFilesInput.current.click()\n   }\n\n   const filesUpload = async(files)=>{\n      let linkPath = router.asPath.split('/');\n      linkPath = linkPath.filter(item => item.length)\n      const folder = `${linkPath.length ? `/${linkPath.join('/')}` : ''}/`\n      for(let file of [...files]){\n         const form = new FormData()\n         form.append('file', file, file.name)\n         form.append('path', `${folder}${file.webkitRelativePath ? file.webkitRelativePath : file.name}`)\n         let {error} = await fetch('/api/upload', {method:'POST', body:form}).then(res => res.json());\n         console.log(error)\n      }\n      getData()\n   }\n\n   return (<>\n      <div className=\"btn-group\">\n         <button className=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\">Enviar</button>\n         <ul className=\"dropdown-menu\">\n            <li>\n               <button className=\"dropdown-item\"\n                  onClick={() => handleFilesInput()}>\n                  Enviar Arquivos\n               </button>\n            </li>\n            <li>\n               <button className=\"dropdown-item\"\n                  onClick={() => handleFilesInput(true)}>\n                  Enviar Pasta\n               </button>\n            </li>\n         </ul>\n      </div>\n      <input type=\"file\" \n         ref={refFilesInput} \n         onChange={(e) => filesUpload(e.target.files)} \n         value=\"\" \n         multiple\n         hidden/>\n   </>)\n}\n"]},"metadata":{},"sourceType":"module"}