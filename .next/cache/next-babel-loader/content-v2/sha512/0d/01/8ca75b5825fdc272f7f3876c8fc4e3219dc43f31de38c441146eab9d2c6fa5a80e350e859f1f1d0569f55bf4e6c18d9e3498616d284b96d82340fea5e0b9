{"ast":null,"code":"const {\n  loginMongo\n} = require('../../models/mongo');\n\nconst {\n  ObjectID\n} = require('mongodb');\n\nconst jwt = require('jsonwebtoken');\n\nconst request = require('request');\n\nconst download = async (_id, path, type) => {\n  let {\n    db,\n    client\n  } = await loginMongo(process.env.MONGODB, 'users');\n  let {\n    dropboxToken\n  } = await db.findOne({\n    _id: new ObjectID(_id)\n  }, {\n    projection: {\n      _id: 0,\n      dropboxToken: 1\n    }\n  });\n  client.close();\n  return new Promise((s, r) => {\n    request.post({\n      url: `https://content.dropboxapi.com/2/files/download${type === 'folder' ? '_zip' : ''}`,\n      encoding: null,\n      headers: {\n        \"Authorization\": `Bearer ${dropboxToken}`,\n        \"Dropbox-API-Arg\": JSON.stringify({\n          path\n        })\n      }\n    }, (err, res, body) => {\n      if (err) return r(err);\n      s(body);\n    });\n  });\n};\n\nconst downloadLinkFile = async (_id, url) => {\n  let {\n    db,\n    client\n  } = await loginMongo(process.env.MONGODB, 'users');\n  let {\n    dropboxToken\n  } = await db.findOne({\n    _id: new ObjectID(_id)\n  }, {\n    projection: {\n      _id: 0,\n      dropboxToken: 1\n    }\n  });\n  client.close();\n  return new Promise((s, r) => {\n    request.post({\n      url: 'https://content.dropboxapi.com/2/sharing/get_shared_link_file',\n      encoding: null,\n      headers: {\n        \"Authorization\": `Bearer ${dropboxToken}`,\n        \"Dropbox-API-Arg\": JSON.stringify({\n          url\n        })\n      }\n    }, (err, res, body) => {\n      if (err) return r(err);\n      s(body);\n    });\n  });\n};\n\nexport default async function handler(req, res) {\n  try {\n    const {\n      method,\n      cookies: {\n        tk\n      }\n    } = req;\n\n    if (tk) {\n      switch (method) {\n        case 'POST':\n          try {\n            let {\n              id\n            } = jwt.verify(tk, process.env.JWTSECRET);\n            let {\n              path,\n              type,\n              shared\n            } = req.body;\n\n            if (shared && type === 'file') {\n              var buffer = await downloadLinkFile(id, path);\n            } else {\n              path = unescape(encodeURIComponent(path));\n              var buffer = await download(id, path, type);\n            }\n\n            res.status(200).send(buffer);\n          } catch (err) {\n            res.status(500).json({\n              statusCode: 500,\n              error: true,\n              msg: err\n            });\n          }\n\n          break;\n\n        default:\n          res.status(405).end(`Method ${method} Not Allowed`);\n      }\n    } else {\n      res.status(500).json({\n        statusCode: 500,\n        error: true,\n        msg: \"Falha na autenticação\"\n      });\n    }\n  } catch (err) {\n    res.status(500).json({\n      statusCode: 500,\n      error: true,\n      msg: err.message\n    });\n  }\n}","map":{"version":3,"sources":["/opt/js/storage_sys/pages/api/download.js"],"names":["loginMongo","require","ObjectID","jwt","request","download","_id","path","type","db","client","process","env","MONGODB","dropboxToken","findOne","projection","close","Promise","s","r","post","url","encoding","headers","JSON","stringify","err","res","body","downloadLinkFile","handler","req","method","cookies","tk","id","verify","JWTSECRET","shared","buffer","unescape","encodeURIComponent","status","send","json","statusCode","error","msg","end","message"],"mappings":"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","sourcesContent":["const { loginMongo } = require('../../models/mongo');\nconst { ObjectID } = require('mongodb');\nconst jwt = require('jsonwebtoken');\nconst request = require('request');\n\nconst download = async(_id, path, type)=>{\n   let {db, client} = await loginMongo(process.env.MONGODB, 'users')\n   let {dropboxToken} = await db.findOne({_id: new ObjectID(_id)},{ projection:{_id:0,dropboxToken:1}})\n   client.close()\n   return new Promise((s,r)=>{\n      request.post({\n         url: `https://content.dropboxapi.com/2/files/download${type==='folder' ? '_zip' : ''}`,\n         encoding: null,\n         headers:{\n            \"Authorization\":`Bearer ${dropboxToken}`,\n            \"Dropbox-API-Arg\": JSON.stringify({path}),\n         },\n      }, (err, res, body)=>{\n         if(err) return r(err)\n         s(body) \n      })\n   })\n}\n\nconst downloadLinkFile = async(_id, url)=>{\n   let {db, client} = await loginMongo(process.env.MONGODB, 'users')\n   let {dropboxToken} = await db.findOne({_id: new ObjectID(_id)},{ projection:{_id:0,dropboxToken:1}})\n   client.close()\n   return new Promise((s,r)=>{\n      request.post({\n         url: 'https://content.dropboxapi.com/2/sharing/get_shared_link_file',\n         encoding: null,\n         headers:{\n            \"Authorization\":`Bearer ${dropboxToken}`,\n            \"Dropbox-API-Arg\": JSON.stringify({url}),\n         },\n      }, (err, res, body)=>{\n         if(err) return r(err)\n         s(body) \n      })\n   })\n}\n\n\nexport default async function handler(req, res){\n   try{\n      const { method, cookies:{tk} } = req;\n      if(tk){\n         switch(method){\n            case 'POST':\n               try{\n                  let { id } = jwt.verify(tk, process.env.JWTSECRET);\n                  let { path, type, shared } = req.body\n                  if(shared && type === 'file'){\n                     var buffer = await downloadLinkFile(id, path)\n                  }else{\n                     path = unescape(encodeURIComponent(path))\n                     var buffer = await download(id, path, type)\n                  }\n                  res.status(200).send(buffer)\n               }catch(err){\n                  res.status(500).json({statusCode: 500, error: true, msg: err})\n               }\n               break;\n            default:\n               res.status(405).end(`Method ${method} Not Allowed`)\n         }\n      }else{\n         res.status(500).json({statusCode: 500, error: true, msg: \"Falha na autenticação\"})\n      }\n   }catch(err){\n      res.status(500).json({statusCode: 500, error: true, msg: err.message})\n   }\n}\n"]},"metadata":{},"sourceType":"module"}