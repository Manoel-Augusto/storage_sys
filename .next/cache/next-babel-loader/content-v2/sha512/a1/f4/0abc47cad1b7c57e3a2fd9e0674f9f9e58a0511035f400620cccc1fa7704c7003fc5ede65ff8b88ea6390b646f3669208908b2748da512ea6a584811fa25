{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/opt/js/storage_sys/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/js/storage_sys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/opt/js/storage_sys/components/common/TableShared.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport { useData } from '../../contexts';\nimport TRShared from './TRShared';\nexport default function TableShared() {\n  _s();\n\n  var _this = this;\n\n  var _useData = useData(),\n      listRecords = _useData.listRecords;\n\n  if (!listRecords || !listRecords.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning\",\n      role: \"alert\",\n      children: \"Esta pasta est\\xE1 vazia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this);\n  }\n\n  var mountFolder = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"++++++++teste\", item);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function mountFolder(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Modificado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: listRecords.map(function (item, index) {\n              return /*#__PURE__*/_jsxDEV(TRShared, {\n                data: item,\n                mountFolder: mountFolder\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TableShared, \"/WBR3LEDGOxXJ9J59MXM3zjOesc=\", false, function () {\n  return [useData];\n});\n\n_c = TableShared;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableShared\");","map":{"version":3,"sources":["/opt/js/storage_sys/components/common/TableShared.js"],"names":["useRef","useEffect","useData","TRShared","TableShared","listRecords","length","mountFolder","item","console","log","map","index"],"mappings":";;;;;;;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,SAASC,WAAT,GAAsB;AAAA;;AAAA;;AAAA,iBAG9BF,OAAO,EAHuB;AAAA,MAE/BG,WAF+B,YAE/BA,WAF+B;;AAKlC,MAAG,CAACA,WAAD,IAAgB,CAACA,WAAW,CAACC,MAAhC,EAAuC;AACpC,wBACG;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,IAAI,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAKF;;AAED,MAAMC,WAAW;AAAA,wEAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACjBC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;;AADiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXD,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAIA,sBAAO;AAAA,2BACJ;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACG;AAAO,UAAA,SAAS,EAAC,mBAAjB;AAAA,kCACG;AAAA,mCACG;AAAA,sCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFH,eAGG;AAAA;AAAA;AAAA;AAAA,sBAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,kBADH,eAQG;AAAA,sBACIF,WAAW,CAACM,GAAZ,CAAgB,UAACH,IAAD,EAAMI,KAAN;AAAA,kCACjB,QAAC,QAAD;AAAsB,gBAAA,IAAI,EAAEJ,IAA5B;AAAkC,gBAAA,WAAW,EAAED;AAA/C,iBAAeK,KAAf;AAAA;AAAA;AAAA;AAAA,uBADiB;AAAA,aAAhB;AADJ;AAAA;AAAA;AAAA;AAAA,kBARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADI,mBAAP;AAoBF;;GArCuBR,W;UAGjBF,O;;;KAHiBE,W","sourcesContent":["import { useRef, useEffect } from 'react';\nimport { useData } from '../../contexts';\nimport TRShared from './TRShared'\n\nexport default function TableShared(){\n   const {\n      listRecords,\n   } = useData()\n\n   if(!listRecords || !listRecords.length){\n      return(\n         <div className=\"alert alert-warning\" role=\"alert\">\n            Esta pasta est√° vazia\n         </div>\n      )\n   }\n\n   const mountFolder = async (item) => {\n      console.log(\"++++++++teste\", item)\n   }\n\n   return(<>\n      <div className=\"row\">\n         <div className=\"col\">\n            <table className=\"table table-hover\">\n               <thead>\n                  <tr>\n                     <th>Nome</th>\n                     <th>Modificado</th>\n                     <th></th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {listRecords.map((item,index) => \n                  <TRShared key={index} data={item} mountFolder={mountFolder}/>\n                  )}\n               </tbody>\n            </table>\n         </div>\n      </div>\n   </>);\n}\n"]},"metadata":{},"sourceType":"module"}